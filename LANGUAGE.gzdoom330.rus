[rus]


// Tabs size for this file: 4.

//  "ZCGlobal.Log()" and all of its derivatives overrides next colors placeholders:
//     '\c-' is a "LLCOLOR_MAIN"      (default user messages color, usually gray);
//     '\c!' is a "LLCOLOR_WARNING"   (yellow);
//     '\c~' is a "LLCOLOR_DARK"      (darkgray).


//  === General and core ===

// Commons:
ZCHECKER_CURLANGUAGE                  = "ru"; //Used for the auto-updating of the cached localized strings.
ZCHECKER_GREETINGS_SUCCESS            = "ZChecker %s успешно инициализирован; всего %i консольных команд, %i составляющих инфопанелей.";
ZCHECKER_GREETINGS_WARNINGS           = "Во время инициализации ZChecker %s \c!возникли неполадки\c-; всего %i консольных команд, %i составляющих инфопанелей.";

ZCHECKER_CCMDSHELP_USAGE              = "Использование";
ZCHECKER_CCMDSHELP_TIPS               = "Советы";
ZCHECKER_CCMDSHELP_EXAMPLES           = "Примеры";
ZCHECKER_CCMDS_DANGERALLOWEDWARN      = "Предупреждение";

// Network events intercepting:
ZCHECKER_NETEVENTINTC_NETEVENT        = "Netevent";
ZCHECKER_NETEVENTINTC_MANUAL          = "Ручной вызов";
ZCHECKER_NETEVENTINTC_SYSTEM          = "Системный вызов";
ZCHECKER_NETEVENTINTC_TIMEAT          = ", время";
ZCHECKER_NETEVENTINTC_FROMPLAYER      = "от игрока #";



//  === Menus ===

ZCHECKER_MAINMENU_TITLE               = "Настройки ZChecker";
ZCHECKER_OPTIONSMENU_ZCHANDLER_ERROR  = "\cxОшибка\ci: ZChecker не может быть запущен.\n\ciБольше информации есть в меню, расположенном выше.";

ZCHECKER_MAINMENU_DIV_GENERAL         = "Основные категории";
ZCHECKER_MAINMENU_INFOPANELS          = "Настройки инфопанелей";
ZCHECKER_MAINMENU_CCMDS               = "Вызов консольных команд [WIP]";
ZCHECKER_MAINMENU_EVMAP               = "Опции карт \"Everything\"";
ZCHECKER_MAINMENU_VISUAL              = "Настройки отображения";
ZCHECKER_MAINMENU_OPEN_MENU_KEY       = "Открыть данное меню";
ZCHECKER_MAINMENU_OPENINFOPANELS      = "Открыть меню инфопанелей";
ZCHECKER_MAINMENU_OPENCCMDS           = "Открыть меню вызова команд";
ZCHECKER_MAINMENU_OPENEVMAP           = "Открыть меню карт \"Everything\"";
ZCHECKER_MAINMENU_OPENVISUAL          = "Открыть меню настроек отображения";

ZCHECKER_MAINMENU_DIV_OTHER           = "Другие настройки";
ZCHECKER_MAINMENU_DIV_HOTKEYS         = "Горячие клавиши";
ZCHECKER_MAINMENU_NETEVENTS           = "Перехват Netevents";
ZCHECKER_MAINMENU_NETEVENTS_TIP       = "Перехватывает информацию с сетевых событий.";
ZCHECKER_MAINMENU_ALLOW_DANGEROUS     = "Разрешить опасные действия";
ZCHECKER_MAINMENU_ALLOW_CRASH         = "Действия, при обычных условиях ломающие игровой движок.";
ZCHECKER_MAINMENU_TWICE_BEHAVIOUR     = "Поведение при дублировании указателя";
ZCHECKER_MAINMENU_ZCADD_BEHAVIOUR     = "Поведение при использовании команд вроде \"zcadd\" на акторе,";
ZCHECKER_MAINMENU_ALREADY_LIST        = "который уже присутствует в инфопанелях.";
ZCHECKER_MAINMENU_NO_ZC_HANDLING      = "Отключить особую обработку ZC-классов";
ZCHECKER_MAINMENU_DO_NOT_ALTER        = "Не изменять способ обработки для";
ZCHECKER_MAINMENU_SPECIAL             = "внутренних акторов и классов ZChecker.";
ZCHECKER_MAINMENU_LOG_LEVEL           = "Уровень журналирования";
ZCHECKER_MAINMENU_UPDATE_5_TICS       = "Будет обновлен в течение пяти игровых тактов.";

ZCHECKER_MAINMENUOPT_LOGLEVEL_MAIN    = "1. Минимальный";
ZCHECKER_MAINMENUOPT_LOGLEVEL_DETAILED = "2. Подробный (по умолч.)";
ZCHECKER_MAINMENUOPT_LOGLEVEL_DEVELOPER = "3. Разработка/API";
ZCHECKER_MAINMENUOPT_LOGLEVEL_DEBUG   = "4. Режим отладки";

ZCHECKER_MAINMENUOPT_FONTS_SMALL      = "Встроенный smallfont";
ZCHECKER_MAINMENUOPT_FONTS_SMSHORT    = "Моно-smallfont с кратким пробелом";
ZCHECKER_MAINMENUOPT_FONTS_SMFULL     = "Моно-smallfont с длинным пробелом";
ZCHECKER_MAINMENUOPT_FONTS_CONFONT    = "Встроенный confont";
ZCHECKER_MAINMENUOPT_FONTS_NEWSMALL   = "Встроенный new smallfont";
ZCHECKER_MAINMENUOPT_FONTS_NEWCON     = "Встроенный new confont";
ZCHECKER_MAINMENUOPT_NOFONTMSG        = "\c~Шрифт \"\c-%s\c~\" недоступен. Вероятно, Вы используете старую версию движка GZDoom.";

ZCHECKER_MAINMENUOPT_NETEVENS_DISABLED = "Отключено";
ZCHECKER_MAINMENUOPT_NETEVENS_NA      = "Названия и аргументы";
ZCHECKER_MAINMENUOPT_NETEVENS_NAM     = "Названия, аргументы и время";
ZCHECKER_MAINMENUOPT_NETEVENS_FULL    = "Вся доступная информация";

ZCHECKER_MAINMENUOPT_TWICE_SMOVE      = "Тихо переместить";
ZCHECKER_MAINMENUOPT_TWICE_SCOPY      = "Тихо скопировать";
ZCHECKER_MAINMENUOPT_TWICE_MOVEWARN   = "Переместить, предупредив (по умолч.)";
ZCHECKER_MAINMENUOPT_TWICE_COPYWARN   = "Скопировать, предупредив";


//  === Infopanels control menu ===

ZCHECKER_INFOPANELSMENU_TITLE         = "Инфопанели ZChecker";
ZCHECKER_INFOPANELSMENUDIV_PANELS     = "\c[gold]Настройки информационных панелей";
ZCHECKER_INFOPANELSMENU_KEYSHELP1     = "\c[tan]Вкл/Откл: \ccПробел\cu/\ccEnter\cu, %s или \ccВлево\cu/\ccВправо";
ZCHECKER_INFOPANELSMENU_KEYSHELP2     = "\c[darkgreen]Открыть подменю: \ccF3\cu/\ccF4\cu/\ccTab\cu или \ccСКМ";
ZCHECKER_INFOPANELSMENU_KEYSHELP3     = "\c[teal]Перемещение: \cc+\cu/\ccKP+\cu,\cc-\cu/\ccKP-\cu или \ccКолесо мыши";
ZCHECKER_INFOPANELSMENUDIV_RESET      = "\c[gold]Управление";
ZCHECKER_INFOPANELSMENU_RESETBUTTON   = "Сбросить порядок инфопанелей";
ZCHECKER_INFOPANELSMENU_ZCHANDLER_ERROR = "\"\n\cxНе удается найти ZChecker static event handler.\n\ciВозможная причина: \cu\"\crEventHandler = ...\cu\"\n\ciв MAPINFO с GZDoom ниже версии 4.8.0.\n\cxИнформационные панели инициализировать невозможно.";
ZCHECKER_INFOPANELSMENUMSG_RESETORDER = "\ccПорядок информационный панелей сброшен до исходного.";

ZCHECKER_INFOPANELS_MAIN              = "Основная информация (индекс, имя, ...)";
ZCHECKER_INFOPANELKEYS_MAIN           = "GMUJ";
ZCHECKER_INFOPANELS_WORLDPOS          = "Позиционирование в мире";
ZCHECKER_INFOPANELKEYS_WORLDPOS       = "WPVG";
ZCHECKER_INFOPANELS_INTERACTION       = "Интерактивные свойства";
ZCHECKER_INFOPANELKEYS_INTERACTION    = "IB";
ZCHECKER_INFOPANELS_GEOMSECTORS       = "Геометрия: секторы";
ZCHECKER_INFOPANELKEYS_GEOMSECTORS    = "GSCU";
ZCHECKER_INFOPANELS_GEOMLINES         = "Геометрия: линии";
ZCHECKER_INFOPANELKEYS_GEOMLINES      = "GLKU";
ZCHECKER_INFOPANELS_INVENTORY         = "Инвентарь";
ZCHECKER_INFOPANELKEYS_INVENTORY      = "IB";
ZCHECKER_INFOPANELS_STATES            = "Стейты";
ZCHECKER_INFOPANELKEYS_STATES         = "SC";
ZCHECKER_INFOPANELS_VISUAL            = "Визуальная составляющая [WIP]";
ZCHECKER_INFOPANELKEYS_VISUAL         = "VD";
ZCHECKER_INFOPANELS_PTRCOMMON         = "Основные указатели";
ZCHECKER_INFOPANELKEYS_PTRCOMMON      = "CPJE";
ZCHECKER_INFOPANELS_PTRINTERACT       = "Указатели взаимодействия";
ZCHECKER_INFOPANELKEYS_PTRINTERACT    = "IPED";
ZCHECKER_INFOPANELS_PTRDEFLINKS       = "Указатели отложенных действий";
ZCHECKER_INFOPANELKEYS_PTRDEFLINKS    = "DLPEJ";
ZCHECKER_INFOPANELS_PTROTHER          = "Другие указатели";
ZCHECKER_INFOPANELKEYS_PTROTHER       = "OPLE";
ZCHECKER_INFOPANELS_ARGSTIDS          = "Аргументы, действие и TID";
ZCHECKER_INFOPANELKEYS_ARGSTIDS       = "ASTFL";
ZCHECKER_INFOPANELS_FRIENDPLAYERS     = "Дружественные игроки и команды";
ZCHECKER_INFOPANELKEYS_FRIENDPLAYERS  = "FPTBR";
ZCHECKER_INFOPANELS_SOUNDDEFS         = "Звуковые свойства (properties)";
ZCHECKER_INFOPANELKEYS_SOUNDDEFS      = "SP";
ZCHECKER_INFOPANELS_CHEATS            = "Читы";
ZCHECKER_INFOPANELKEYS_CHEATS         = "CX";

ZCHECKER_INFOPANELSMENU_INALLPANELS   = "Во всех";
ZCHECKER_INFOPANELSMENU_NOTINPANELS   = "Отключено";

ZCHECKER_PANELSOPT_FLAGS_OFF          = "Отключено";
ZCHECKER_PANELSOPT_FLAGS_SHORT        = "Сокращенно";
ZCHECKER_PANELSOPT_FLAGS_LONG         = "Полностью";

ZCHECKER_PANELSUBMENUNOTE_PLAYSCOPE   = "Будет обновлен во время следующего игрового такта.";
ZCHECKER_PANELSUBMENU_DEFAULTLABEL    = "Подменю. ";
ZCHECKER_PANELSUBMENU_DEFAULTMORE     = "[...далее]";

ZCHECKER_PANELSUBLABEL_MAIN_PREFIX    = "Вывод ";
ZCHECKER_PANELSUBLABEL_MAIN_TAG       = "тэга";
ZCHECKER_PANELSUBLABEL_MAIN_TAGAUTO   = "тэга (если не равен имени)";
ZCHECKER_PANELSUBLABEL_MAIN_SELFPTR   = "указателя";
ZCHECKER_PANELSUBLABEL_MAIN_PLRINFO   = "инфо игрока";
ZCHECKER_PANELSUBLABEL_MAIN_XPREFIX   = "Без дополнительной информации";
ZCHECKER_PANELSUBMENU_MAIN_TITLE      = "Панель ZChecker: Основная информация";
ZCHECKER_PANELSUBMENU_MAIN_TAG        = "Тэг актора";
ZCHECKER_PANELSUBMENU_MAIN_SELFPTR    = "Внутренний указатель";
ZCHECKER_PANELSUBMENU_MAIN_PLAYERINFO = "Информация об игроке";
ZCHECKER_PANELMAINOPT_TAGS_OFF        = "Не отображать";
ZCHECKER_PANELMAINOPT_TAGS_AUTO       = "Если отличается от названия класса";
ZCHECKER_PANELMAINOPT_TAGS_ON         = "Отображать всегда";

ZCHECKER_PANELSUBLABEL_WPOS_ROLLON    = "Все углы поворота ";
ZCHECKER_PANELSUBLABEL_WPOS_ROLLOFF   = "Курс и тангаж (angle, pitch)";
ZCHECKER_PANELSUBLABEL_WPOS_FRACLEN   = ", длина дроби";
ZCHECKER_PANELSUBLABEL_WPOS_BUTTONS   = "; клавиши";
ZCHECKER_PANELSUBMENU_WPOS_TITLE      = "Панель ZChecker: Позиционирование";
ZCHECKER_PANELSUBMENU_WPOSDIV_TILTS   = "Углы поворота";
ZCHECKER_PANELSUBMENU_WPOS_DECIMAMNT  = "Количество цифр в дробной части";
ZCHECKER_PANELSUBMENU_WPOS_NOROLL     = "Убрать отображение крена (roll)";
ZCHECKER_PANELSUBMENU_WPOSDIV_OTHER   = "Другое";
ZCHECKER_PANELSUBMENU_WPOS_PLAYERBUTTONS = "Нажатые игроком клавиши";

ZCHECKER_PANELSUBLABEL_INV_PREFIX     = "Предметы: ";
ZCHECKER_PANELSUBLABEL_INV_SORTEDBY   = ", сорт. по";
ZCHECKER_PANELSUBLABEL_INV_UNSORTED   = ", несорт.";
ZCHECKER_PANELSUBLABEL_INV_REVERSED   = "(возр.)";
ZCHECKER_PANELSUBMENU_INV_TITLE       = "Панель ZChecker: Инвентарь";
ZCHECKER_PANELSUBMENU_INV_ITEMSAMNT   = "Число отображаемых элементов";
ZCHECKER_PANELSUBMENU_INV_SORTBY      = "Сортировать вывод по";
ZCHECKER_PANELSUBMENU_INV_REVERSE     = "Сортировка по возрастанию";
ZCHECKER_PANELINVOPT_SORT_UNSORTED    = "(Не сортировать)";
ZCHECKER_PANELINVOPT_SORT_NAMES       = "именам";
ZCHECKER_PANELINVOPT_SORT_CURAMOUNT   = "текущему кол-ву";
ZCHECKER_PANELINVOPT_SORT_MAXAMOUNT   = "максимальному кол-ву";

ZCHECKER_PANELSUBLABEL_STATES_PREFIX  = "Кол-во стейтов: ";
ZCHECKER_PANELSUBLABEL_STATES_STATES  = "строк";
ZCHECKER_PANELSUBLABEL_STATES_UNLIMITED = "без ограничений числа";
ZCHECKER_PANELSUBLABEL_STATES_LOGGING = "вывод в лог";
ZCHECKER_PANELSUBMENU_STATES_TITLE    = "Панель ZChecker: Стейты";
ZCHECKER_PANELSUBMENU_STATESDIV_GENERAL = "Основное";
ZCHECKER_PANELSUBMENU_STATES_AMNT     = "Количество";
ZCHECKER_PANELSUBMENU_STATES_CONLOG   = "Выводить трассировку в консоль";
ZCHECKER_PANELSUBMENU_STATESNOTE_CONLOG = "Прим.: \"0\" означает отсутствие лимита вывода";
ZCHECKER_PANELSUBMENU_STATESDIV_CUR   = "Для текущего стейта";
ZCHECKER_PANELSUBMENU_STATES_TICSBAR  = "Строка оставшегося числа тиков";
ZCHECKER_PANELSUBMENU_STATES_FLAGS    = "Флаги";
ZCHECKER_PANELSUBMENU_STATES_EXTRAINFO = "Другая информация";

ZCHECKER_PANELSUBLABEL_GSEC_FCSEC     = "Раздельно";
ZCHECKER_PANELSUBLABEL_GSEC_CURSEC    = "Один блок";
ZCHECKER_PANELSUBLABEL_GSEC_PREFIX2   = "Вывод: ";
ZCHECKER_PANELSUBLABEL_GSEC_HEIGHTS   = "высота";
ZCHECKER_PANELSUBLABEL_GSEC_LIGHT     = "свет";
ZCHECKER_PANELSUBLABEL_GSEC_TEXTURES  = "ткстр";
ZCHECKER_PANELSUBLABEL_GSEC_FLAGS     = "флаги";
ZCHECKER_PANELSUBLABEL_GSEC_DAMAGE    = "урон";
ZCHECKER_PANELSUBLABEL_GSEC_PHYSICS   = "физ.";
ZCHECKER_PANELSUBLABEL_GSEC_PORTALS   = "порталы";
ZCHECKER_PANELSUBLABEL_GSEC_TERRAIN   = "terrain";
ZCHECKER_PANELSUBLABEL_GSEC_OTHER     = "другое";
ZCHECKER_PANELSUBMENU_GSEC_TITLE      = "Панель ZChecker: Геометрия секторов";
ZCHECKER_PANELSUBMENU_GSEC_SEPARATE   = "Раздельный вывод для пола/потолка";
ZCHECKER_PANELSUBMENU_GSEC_HEIGHTS    = "Высоты";
ZCHECKER_PANELSUBMENU_GSEC_LIGHT      = "Уровень освещения";
ZCHECKER_PANELSUBMENU_GSEC_TEXTURES   = "Текстуры";
ZCHECKER_PANELSUBMENU_GSEC_FLAGS      = "Флаги";
ZCHECKER_PANELSUBMENU_GSEC_DAMAGE     = "Урон (также для terrain)";
ZCHECKER_PANELSUBMENU_GSEC_PHYSICS    = "Физические свойства/взаимодействие";
ZCHECKER_PANELSUBMENU_GSEC_PORTALS    = "Порталы";
ZCHECKER_PANELSUBMENU_GSEC_TERRAIN    = "Terrain пола";
ZCHECKER_PANELSUBMENU_GSECNOTE_WIP    = "(Пока не реализровано):";
ZCHECKER_PANELSUBMENU_GSEC_OTHER      = "Другое: уровень воды, действие, ...";
ZCHECKER_PANELGEOMSECOPT_HEIGHT_OFF   = "Не выводить";
ZCHECKER_PANELGEOMSECOPT_HEIGHT_ZONLY = "Z-координата";
ZCHECKER_PANELGEOMSECOPT_HEIGHT_ZDELTA = "Z-коорд. + дельта до актора";


ZCHECKER_PANELSUBMENU_SNDDEFS_TITLE   = "Панель ZChecker: Звуки (properties)";
ZCHECKER_PANELSUBMENU_SNDDEFS_RARE    = "Вывод редкоиспользуемых";


//  === Visual Settings control menu ===

ZCHECKER_VISUAL_TITLE                 = "ZChecker: настройки отображения";
ZCHECKER_VISUAL_POSITIONING           = "Положение панелей";
ZCHECKER_VISUAL_START_X               = "Начало по X, %";
ZCHECKER_VISUAL_START_X_10            = "Начало по X, x10%";
ZCHECKER_VISUAL_START_Y               = "Начало по Y, %";
ZCHECKER_VISUAL_START_Y_10            = "Начало по Y, x10%";
ZCHECKER_VISUAL_OFFSET_X              = "Смещение по X, %";
ZCHECKER_VISUAL_PANELS_SCALE          = "Масштабирование";
ZCHECKER_VISUAL_PANELS_Y_GAP          = "Интервал по Y, множитель";
ZCHECKER_VISUAL_BACKGROUND            = "Настройки фона панелей";
ZCHECKER_VISUAL_ENABLED               = "Включен";
ZCHECKER_VISUAL_DIMCOLOR              = "Цвет фона";
ZCHECKER_VISUAL_DIMALPHA              = "Прозрачность фона";
ZCHECKER_VISUAL_DIMBORDERWIDTH        = "Ширина границ";
ZCHECKER_VISUAL_EVERYTHINGMAP_INFO    = "Информационный актор на картах \"Everything\"";
ZCHECKER_VISUAL_INFOSTR_X             = "Начало строки по X, %";
ZCHECKER_VISUAL_INFOSTR_X10           = "Начало строки по X, x10%";
ZCHECKER_VISUAL_INFOSTR_Y             = "Начало строки по Y, %";
ZCHECKER_VISUAL_INFOSTR_Y10           = "Начало строки по Y, x10%";
ZCHECKER_VISUAL_INFOSTR_SCALE         = "Масштабирование строки";
ZCHECKER_VISUAL_OTHER                 = "Остальное";
ZCHECKER_VISUAL_FONTTYPES             = "Глобальный шрифт";

//  === Control menu for the "Everything" map ==

ZCHECKER_EVMAPMENU_TITLE              = "ZChecker: опции карт \"Everything\"";
ZCHECKER_EVMAPMENU_SPAWNOPTIONS       = "Настройки создания акторов";
ZCHECKER_EVMAPMENUDIV_GENERAL         = "- Общее -";
ZCHECKER_EVMAPMENU_SPAWNREPLACED      = "Замененные акторы";
ZCHECKER_EVMAPMENU_RESTRICT           = "Замены запрещенных акторов";
ZCHECKER_EVMAPMENUDIV_SPRITES         = "- По пустым спрайтам -";
ZCHECKER_EVMAPMENU_MISSING            = "Акторы с пропущенными спрайтами";
ZCHECKER_EVMAPMENU_TNT1A0             = "Акторы со спрайтами \'TNT1A0\'";
ZCHECKER_EVMAPMENU_PLYC               = "Акторы с искаженными названиями спрайтов";
ZCHECKER_EVMAPMENUDIV_CODEBASED       = "- Код -";
ZCHECKER_EVMAPMENU_STEALTH            = "Стелс-акторы (+STEALTH)";
ZCHECKER_EVMAPMENU_INVISIBLE          = "Невидимые акторы (+INVISIBLE)";
ZCHECKER_EVMAPMENU_PLAYERCHUNK        = "Наследованные от \'PlayerChunk\'";
ZCHECKER_EVMAPMENUDIV_OTHER           = "Другое";
ZCHECKER_EVMAPMENU_AUTONOTARGET       = "Автовключение \"notarget\"";
ZCHECKER_EVMAPMENU_AUTOGOD            = "Автовключение неуязвимости";
ZCHECKER_EVMAPMENU_SPEC_CHEATS        = "Автоматически включать указанные читы";
ZCHECKER_EVMAPMENU_ENTERING           = "при входе на карты \"Everything\".";
ZCHECKER_EVMAPMENU_LOGSPAWN           = "Лог информации о создании";
ZCHECKER_EVMAPMENU_LOGCREATED1        = "Вывод информации в консоль о созданных";
ZCHECKER_EVMAPMENU_LOGCREATED2        = "(и пропущенных) акторах на картах \"Everything\".";
ZCHECKER_EVMAPMENU_FORCEUSE           = "Всегда использовать скрипты карты";
ZCHECKER_EVMAPMENU_ALLOWSPEC1         = "Этот параметр позволяет запускать скрипты";
ZCHECKER_EVMAPMENU_ALLOWSPEC2         = "карт \"Everything\" для любых уровней, минуя все проверки.";
ZCHECKER_EVMAPMENU_ZCHANDLER_ERROR    = "\"\n\cxНе удается найти ZChecker static event handler.\n\ciВозможная причина: \cu\"\crEventHandler = ...\cu\"\n\ciв MAPINFO с GZDoom ниже версии 4.8.0.\n\cxКоманды карты \"Everything\" не могут быть использованы.";

ZCHECKER_EVMAPMENUDIV_EVCCMDS         = "Связанные команды (с закрытием меню)";
ZCHECKER_EVMAPMENUDIV_MAINCCMDS       = "- Общие консольные команды -";
ZCHECKER_EVMAPMENU_RECREATEACTORS     = "Пересоздать акторов\cc: \"\cbzcevre\cc\"";
ZCHECKER_EVMAPMENU_CHANGEMAP1         = "На карту Everything\cc: \"\cuzcev map\cc\"";
ZCHECKER_EVMAPMENU_CHANGEMAP2         = "На упрощенную карту Everything\cc: \"\cuzcev map2\cc\"";
ZCHECKER_EVMAPMENU_CHANGEMAP1ASK      = "Вы будете перенесены на карту Everything\nбез сохранения текущего прогресса. \n\nВы уверены? [Y/N]";
ZCHECKER_EVMAPMENU_CHANGEMAP2ASK      = "Вы будете перенесены на упрощенную версию карты Everything\nбез сохранения текущего прогресса. \n\nВы уверены? [Y/N]";
ZCHECKER_EVMAPMENU_WARPSTART          = "Перейти на старт\cc: \"\cmzcevg #\cqstart\cc\"";
ZCHECKER_EVMAPMENUDIV_WARPMONS        = "- Переход к категориям монстров -";
ZCHECKER_EVMAPMENUDIV_WARPITEMS       = "- Переход к категориям предметов -";
ZCHECKER_EVMAPMENUDIV_WARPDECOR       = "- Переход к категориям декораций и объектов -";
ZCHECKER_EVMAPMENUDIV_WARPOTHER       = "- Переход к остальным категориям -";

//  === Console commands control menu ===

ZCHECKER_CCMDMENU_TITLE               = "ZChecker: вызов консольных команд";
ZCHECKER_CCMDMENU_WIP                 = "[В разработке] Здесь будут часто используемые консольные команды.";
ZCHECKER_CCMDMENU_HELPNOTE1           = "Все команды могут быть показаны через";
ZCHECKER_CCMDMENU_HELPNOTE2           = "\"zchelp all\"; также можно использовать \"zchelp <команда>\".";
ZCHECKER_CCMDMENU_ZCHANDLER_ERROR     = "\"\n\cxНе удается найти ZChecker static event handler.\n\ciВозможная причина: \cu\"\crEventHandler = ...\cu\"\n\ciв MAPINFO с GZDoom ниже версии 4.8.0.\n\cxКонсольные команды не могут быть использованы.";
ZCHECKER_CCMDMENU_EXAMPLES            = "Примеры команд:";
ZCHECKER_CCMDMENU_ZCADD               = "\"zcadd\": Добавление цели под курсором в панель";
ZCHECKER_CCMDMENU_ZCADD_SELF          = "\"zcadd self\": Добавление себя в панель";
ZCHECKER_CCMDMENU_ZCREM               = "\"zcrem\": Очистка всех панелей";


//  === An Everything" maps ==

ZCHECKER_EVMAP_INITERROR              = "%s::RecreateEverything(). Невозможно продолжить из-за ошибок на карте; останов.";
ZCHECKER_EVMAP_RECREATEACTORS         = "Пересоздание акторов на карте...";
ZCHECKER_EVMAP_RELOADSECTORS          = "Перезагрузка свойств всех секторов...";
ZCHECKER_EVMAP_AUTOIDDQD              = "Неуязвимость включена автоматически.";
ZCHECKER_EVMAP_AUTONOTARGET           = "Команда notarget включена автоматически.";
ZCHECKER_EVMAPSPAWN_SUCCESS           = "\cqсоздан класс \"\cd%s\cq\"\c~ (спрайт \"%s\").";
ZCHECKER_EVMAPSPAWN_EMPTYSPRITESKIP   = "\c~класс \"\cz%s\c~\" пропущен из-за пустого спрайта \"%s\".";
ZCHECKER_EVMAPSPAWN_MISSPRITESKIP     = "\c~класс \"\cz%s\c~\" пропущен из-за \cpнесуществующего спрайта\c~ \"\cs%s\c~\".";
ZCHECKER_EVMAPSPAWN_CORRUPSPRITESKIP  = "\c~класс \"\cz%s\c~\" пропущен из-за \crискажения спрайта\c~ \"\cs%s\c~\" (попытка стать \"%s\").";
ZCHECKER_EVMAPSPAWN_INVISSKIP         = "\c~класс \"\cz%s\c~\" пропущен из-за установленных флагов \c-+STEALTH\c~/\c-+INVISIBLE\c~.";
ZCHECKER_EVMAPSPAWN_PLCHUNKSKIP       = "\c~класс \"\cz%s\c~\" пропущен из-за наследования от \"PlayerChunk\".";
ZCHECKER_EVMAPSPAWN_REPLACEDSKIP      = "\c~класс \"\cz%s\c~\" заменен (replaced) и поэтому пропущен.";
ZCHECKER_EVMAPSPAWN_REPLRESTRICTEDSKIP = "\c~замененный (replaced) классом \"\c-%s\c~\" класс \"\c-%s\c~\" запрещен\c~.";
ZCHECKER_EVMAPCATEGORY_PREFIX         = "\cuКатегория \cj%s\cu. ";
ZCHECKER_EVMAPCATEGORY_NORMALSPAWN    = "Всего акторов создано: %i";
ZCHECKER_EVMAPCATEGORY_EMPTYSPAWN     = "Акторов нет";
ZCHECKER_EVMAPCATEGORY_PARTIALSPAWN   = "Всего акторов создано: \ca%i/%i\cu";
ZCHECKER_EVMAP_RESUMMON               = "\c~Создан актор \c-%s\c~.";
ZCHECKER_EVMAP_INFOSTR_REPLACES       = "%s \cnзаменяет\c- %s";



//  === Console commands ===

// General:

ZCHECKER_CCMD_WIP                     = "\c~[Команда находится в разработке, может работать неочевидным образом или же не работать вовсе].";

//  "ZCConsoleCommand::GetPlaceTestee()" and "ZCConsoleCommand::LinetraceActor()"
ZCHECKER_GETACTOR_SKIPPEDSPECIAL      = "Пропущен внутренний класс ZChecker \"%s\".";
ZCHECKER_GETACTOR_LTNOACTORS          = "Доступных целей под курсором не найдено.";
ZCHECKER_GETACTOR_EMPTYPOS            = "Актора в позиции %i не существует.";
ZCHECKER_GETACTOR_WRONGPOS            = "\c!Неверная позиция %i\c- (должен лежать в пределах [1..%i]).";
ZCHECKER_GETACTOR_UNKNOWNKEYWORD      = "\c!Неизвестная подстановка \"%s\" в позиции %i\c~. Возможные значения: \c-1..%i, s[elf], cam[era], lt\c~|\c-linetarget\c~.";

//  "ZCConsoleCommand::ParseSpecialActorName()"
ZCHECKER_PARSENAME_WRONGSELECT        = "\c!Указание \"%s\" - не положительное целое число.";
ZCHECKER_PARSENAME_EMPTYKEYWORD       = "\c!Пропущена\c- подстановка \"%s\", вырождающаяся в пустую. Для обхода этого можно использовать \"%%null\" или \"%%none\".";
ZCHECKER_PARSENAME_UNSETVAR           = "\c!Пропущена\c- еще не установленная внутренняя переменная \"%s\".";
ZCHECKER_PARSENAME_NOCLASSCHARS       = "\c!Нет ни одного символа, определяющего класс.";
ZCHECKER_PARSENAME_WITHFILTER         = "\c~ с фильтром \cj%s\c~";
ZCHECKER_PARSENAME_NOTFOUND           = "Подходящих под регулярное выражение кандидатов не найдено.";
ZCHECKER_PARSENAME_FOUNDSOME          = "Найдено более одного кандидата, подходящих под регулярное выражение.";
ZCHECKER_PARSENAME_SELECTBOUNDS       = "\c!Выбранный индекс \cn%i \c!находится вне дипапзона\c- найденных кандидатов.";
ZCHECKER_PARSENAME_IGNORESELECT       = "\c!Пропуск числового указания %i\c-";

//  "ZCConsoleCommand::RemoveWorldThinker()"
ZCHECKER_REMOVEPREVENT_LIVEPLAYER     = "\crПопытка уничтожения живого игрока %i\c-, \c!пропущено\c-. Вы можете переопределить это с помощью опции \"Разрешить опасные действия\".";
ZCHECKER_REMOVEWARNING_LIVEPLAYER     = "уничтожение живого игрока";
ZCHECKER_REMOVEPREVENT_ZCINTERNAL     = "\crВнутренний класс ZChecker \"\c-%s\cr\" в списке на уничтожение, \c!пропущен\c-. Вы можете переопределить это с помощью опции \"Разрешить опасные действия\".";
ZCHECKER_REMOVEWARNING_ZCINTERNAL     = "уничтожение внутреннего класса ZChecker";

//  "ZCAddCommand::HandleDuplicateActorFields()"
ZCHECKER_ADD_DUPLICATELINK            = "\c~Найдена \c!ссылка-дубликат \c~для актора \c-%s\c~ в панели %i.";


//  "File ZCCommandsGeneral.zsc"

//  "zchelp":
ZCHECKER_ZCHELP_HELP_TITLE            = "zchelp [a[ll]|-a|--all|-v];zchelp <zc-команда>";
ZCHECKER_ZCHELP_HELP_DESC             = "Этот текст помощи. Если введена <команда>, выводит полную справку для нее (в большинстве случаев с примерами). Иначе, если введен аргумент <all>, показывает краткую справку по всем существующим командам.";
ZCHECKER_ZCHELP_CANNOTFIND            = "\czСправка ZChecker: \cxне удается найти консольную команду ZChecker \c~\"\c-%s\c~\"\cx.";
ZCHECKER_ZCHELP_VERBOSETITLE          = "\cyZChecker \chv%s.\
  (c)\cj JSO_x\ch a.k.a.\cj Morthimer McMare\ch;\
  (c)\ch Команда \cj LLDM-Doom-modding\ch.\n\n";
ZCHECKER_ZCHELP_HEADERCOMMONCCMDS     = "\cjСписок основных доступных команд\c-:";
ZCHECKER_ZCHELP_HEADERALLCCMDS        = "\cjПолный список доступных команд\c-:";

//  "zcadd":
ZCHECKER_ZCADD_HELP_TITLE             = "zcadd [s[elf]|w[eapon]|cam[era]|force] [<панель>];zcaddself [<панель>];zcaddweap [<панель>];zcaddforce [<панель>];zcaddlistget [<индекс>] [<панель>]";
ZCHECKER_ZCADD_HELP_DESC              = "Добавление цели под курсором (без суффикса)/этого игрока (\"self\")/текущего оружия (\"weap\")/бесплотной цели (\"force\")/произвольного актора (\"listget\") в информационную панель. <панель> - номер самой панели; по умолчанию используется первый свободный слот.";
ZCHECKER_ZCADD_ADDINSUFFPLACE         = "Невозможно добавить цель, недостаточно места в списке. Можно использовать присвоение в определенную панель через \"zcadd 1\"..\"zcadd %i\".";
ZCHECKER_ZCADD_NOWEAPON               = "Текущего оружия нет.";
ZCHECKER_ZCADD_FORCENOTFOUND          = "Не удается найти подходящего актора.";
ZCHECKER_ZCADD_CAMERAISPLAYER         = "\c~Камера игрока прикреплена к самому игроку, добавление последнего.";
ZCHECKER_ZCADD_SUCCESSCOMMON          = "Добавлен актор %s";
ZCHECKER_ZCADD_SUCCESSPLAYER          = "Добавлен наследованный от PlayerPawn актор %s";
ZCHECKER_ZCADD_SUCCESSWEAPON          = "Добавлен наследованный от StateProvider актор %s";
ZCHECKER_ZCADD_SUCCESSFORCED          = "Добавлен актор %s";
ZCHECKER_ZCADD_SUCCESSCAMERA          = "Добавлена камера игрока %s";
ZCHECKER_ZCADD_USINGPREVLINK          = "\c~Используется уже существующая ссылка (панель \cj%i\c~) для актора \cu%s\c~.";

//  "zcrem"/"zcclear":
ZCHECKER_ZCREM_HELP_TITLE             = "zcrem [<панель>];zcclear [<панель>]";
ZCHECKER_ZCREM_HELP_DESC              = "Убирает актора из информационной панели под номером <panel>; очищает весь список, если аргумента нет.";
ZCHECKER_ZCREM_SUCCESS                = "Удален актор \"%s\" <%s> с позиции %i.";
ZCHECKER_ZCREM_SUCCESSTOTAL           = "Все акторы удалены из инфопанелей.";
ZCHECKER_ZCREM_EMPTYPOS               = "Удалить невозможно, так как актора в позиции %i нет.";


// File "ZCCommandsActorAlter.zsc":

//  "zcact":
ZCHECKER_ZCACT_HELP_TITLE             = "zcact [<с кем>] <действие>";
ZCHECKER_ZCACT_HELP_DESC              = "Делает некоторое комплексное действие с актором <с кем> (по умолчанию с целью под курсором). Список <действий>: \"rev[ive]\"|\"res[urrect]\", \"k[ill]\", \"xk[ill]\"|\"mdk\", \"destroy\"|\"rem[ove]\"|\"rm\"|\"del[ete]\".";
ZCHECKER_ZCACT_CANNOTREVIVE           = "Невозможно воскресить актора %s.";
ZCHECKER_ZCACT_REVIVED                = "Актор %s воскрешен.";
ZCHECKER_ZCACT_REVIVEVANISH           = "Актор %s был воскрешен, но сразу же исчез.";
ZCHECKER_ZCACT_REVIVEBLOCKED          = "Воксрешение актора %s \caблокируется\c-.";
ZCHECKER_ZCACT_KILLED                 = "Актор %s убит.";
ZCHECKER_ZCACT_CANNOTKILL             = "Не удается убить актора %s.";
ZCHECKER_ZCACT_XKILLED                = "Актор %s жестоко убит.";
ZCHECKER_ZCACT_CANNOTXKILL            = "Не удается жестоко убить актора %s.";
ZCHECKER_ZCACT_DESTROYED              = "Актор %s уничтожен.";

//  "zcgive":
ZCHECKER_ZCGIVE_HELP_TITLE            = "zcgive [<кому>] <предмет> [<количество=1>]";
ZCHECKER_ZCGIVE_HELP_DESC             = "Выдает <количество> <предмет>ов актору <кому> (по умолчанию цели под курсором).";
ZCHECKER_ZCGIVE_SUCCESS               = "Предмет \"%s\" был выдан актору \"%s\".";
ZCHECKER_ZCGIVE_CANNOTRECEIVE         = "Актор %s не может принять предмет.";
ZCHECKER_ZCGIVE_NOTINVCLASS           = "\"%s\" - не класс Inventory.";

//  "zctake":
ZCHECKER_ZCTAKE_HELP_TITLE            = "zctake [<от кого>] <предмет> [<количество=1>]";
ZCHECKER_ZCTAKE_HELP_DESC             = "Отбирает <количество> <предмет>ов с актора <от кого> (по умолчанию с цели под курсором).";
ZCHECKER_ZCTAKE_SUCCESS               = "Предмет \"%s\" был отобран от актора \"%s\".";
ZCHECKER_ZCTAKE_CANNOTRECEIVE         = "Невозможно отобрать предмет у актора %s.";
ZCHECKER_ZCTAKE_NOTINVCLASS           = "\"%s\" - не класс Inventory.";

//  "zcsummon":
ZCHECKER_ZCSUMMON_HELP_TITLE          = "zcsummon <класс> [<количество=1>] [<разделенный запятыми список дополнительных свойств>]";
ZCHECKER_ZCSUMMON_HELP_DESC           = "Создает <количество> <класс>ов аналогично встроенной одноименной команде. Дополнительный свойства могут быть перечислены через запятую без пробелов. Возможные значения (\"rel\" - относительно игрока):\
  ПОВЕДЕНИЕ: f[riend]|foe, aggr[essiveness]:<0-255>, [no]infi[ght], notproj[ectile];\
  МИР      : [rel]ang[le]:<угол>, [rel]pitch:<тангаж>, zofs:<маппикселей>, f[wd]ofs:<маппикселей>;\
  ДРУГОЕ   : panel|add[:<панель>], tid:<TID>, spec:<действие>, a[rg]0:<арг0>,...,a[rg]4:<арг4>, hp|health:<hp>.";
ZCHECKER_ZCSUMMON_CLAMPINT            = "\c!%s (%i) вне диапазона [%i; %i]. \c-Ограничено до %i.";
ZCHECKER_ZCSUMMON_CLAMPFLOAT          = "\c!%s (%f) вне диапазона [%.3f; %.3f]. \c-Ограничено до %.3f.";
ZCHECKER_ZCSUMMON_WRONGPANEL          = "\c!Неверный номер панели \"%s\".";
ZCHECKER_ZCSUMMON_WRONGARG            = "\c!Неверный числовой аргумент для параметра %s.";
ZCHECKER_ZCSUMMON_WRONGDIGIT          = "\c!Значение \"%s\" \c-для параметра \"%s\" - \c!не число\c-.";
ZCHECKER_ZCSUMMON_EMPTYVALUE          = "\c!Пустое значение в параметре \"%s\".";
ZCHECKER_ZCSUMMON_UNKNOWNPARAM        = "\c!Неизвевстный параметр \"%s\"";
ZCHECKER_ZCSUMMON_UNKNOWNFLAG         = "\c!Неизвестный флаг \"%s\".";
ZCHECKER_ZCSUMMON_LIMITPREVENT        = "Попытка создать более 200 акторов за раз. \c~Отключить это можно через опцию \"Разрешить опасные действия\".";
ZCHECKER_ZCSUMMON_LIMITWARNING        = "создание более чем 200 акторов";
ZCHECKER_ZCSUMMON_SUCCESS             = "Создан(о) %i %s \c~класса \"\cd%s\c~\".";
ZCHECKER_ZCSUMMON_SUCCESS_1ACTOR      = "актор";
ZCHECKER_ZCSUMMON_SUCCESS_ACTORS      = "актор(ов)";
ZCHECKER_ZCSUMMON_ADDINSUFFPLACE      = "Невозможно добавить цель, недостаточно места в списке. Можно использовать присвоение в определенную панель через значение параметра \"panel:1\"..\"panel:%i\".";
ZCHECKER_ZCSUMMON_ADDONLYLAST         = "\c~Только последний созданный актор будет добавлен в панель.";
ZCHECKER_ZCSUMMON_CANNOTSUMMON        = "\caНе удается создать актор \cu\"\c-%s\cu\". Возможно, он помечен как \"abstract\" или же мгновенно уничтожается в переопределении BeginPlay().";
ZCHECKER_ZCSUMMON_NOTACTOR            = "\"%s\" - не класс Actor.";

//  "zccopyclass"/"zccopysummon":
ZCHECKER_ZCCOPYPASTE_HELP_TITLE       = "zccopyclass;zccopysummon [<количество=1>] [<разделенный запятыми список как в \"zcsummon\">]";
ZCHECKER_ZCCOPYPASTE_HELP_DESC        = "Сдвоенная команда. \"zccopyclass\" сохраняет название актора под курсором во внутреннюю переменную $savedclass; \"zccopysummon\" создает актор(ов) класса $savedclass.";

//  "zcsetflag":
ZCHECKER_ZCSETFLAG_HELP_TITLE         = "zcsetflag [<кому>] <название флага> [<значение: 0/f[alse]/reset or 1/t[rue]/set>[,nospec]];zcsetf [<кому>] <название флага> [<значение>[,nospec]];zcsf [<кому>] <название флага> [<значение>[,nospec]];zcbud [<кому>] [<значение>]";
ZCHECKER_ZCSETFLAG_HELP_DESC          = "Устанавливает или сбрасывает <флаг> актору <кому> (по умолчанию цели под курсором). Переключает <флаг>, если <значение> не указано. Примечание: из-за асинхронного исполнения сетевых событий ZScript и машины ACS операция над флагом будет отложена на один игровой такт.";
ZCHECKER_ZCSETFLAG_SUCCESS            = "Флаг \"%s\" для актора %s успешно установлен в %i.";

//  "zcsetstate":
ZCHECKER_ZCSETSTATE_HELP_TITLE        = "zcsetstate [<кому>] <метка стейта>;zcsets [<кому>] <метка стейта>;zcsetst [<кому>] <метка стейта>;zcst [<кому>] <метка стейта>";
ZCHECKER_ZCSETSTATE_HELP_DESC         = "Устанавливает указанную <метку стейта> актору <кому> (по умолчанию цели под курсором). Примечание: из-за асинхронного исполнения сетевых событий ZScript и машины ACS операция над флагом будет отложена на один игровой такт.";

//  "zcsetprop":
ZCHECKER_ZCSETP_HELP_TITLE            = "zcsetprop [<кто>] [add|rel[ative][:<к кому>]|raw] <свойство>:<значение>[,<св-во>:<значение>,[...]];zcsetp [<кто>] [add|rel[:<к кому>]] <свойство>:<значение>[,...];zcsp [<кто>] [add|rel[:<к кому>]] <свойство>:<значение>[,...];zchate [<кто>] [<кого>|null]";
ZCHECKER_ZCSETP_HELP_DESC             = "Устанавливает <свойство> (property) в <значение> для актора <кто> (по умолчанию цели под курсором). С параметром \"raw\" или вовсе без параметра свойство будет просто перезаписано; с \"add\" - прибавлено к текущему значению (если это возможно); и с \"rel[ative]][:<к кому>]\" - прибавлено к значению указанного актора, или к игроку при пропущенном поле <к кому> (опять же, если возможно). Доступные свойства:\
  МИР      : x <дробн>, y <дробн>, z <дробн>|floor|ceil|rawceil, velx|vely|velz <дробн>, angle|pitch|roll <дробн>;\
  ИНТЕРАКТ.: health|hp <цел>|s[pawn]|max, [float]speed <дробн>, radius <дробн>, height <дробн>, mass <цел>, gravity <дробн>, rawhp <цел>;\
  ОТРИСОВКА: scale[x|y] <дробн>, alpha <дробн>;\
  УКАЗАТЕЛИ: target|tp <кто>|null, master|mp <кто>|null, tracer|trp|rp <кто>|null;\
  ДРУГОЕ   : arg0..arg4 <цел>, special|action <цел>, tid <значение>|unique.";
ZCHECKER_ZCSETP_RELPLAYER             = "\c~В качестве базового актора для относительных значений \c-взят вызывающий игрок\c~.";
ZCHECKER_ZCSETP_UNKNOWNMODE           = "\c!Неизвестный режим \c~\"\c-%s\c~\". Должен быть пустым, \c-raw\c~ (прямым присвоением), \c-add\c~ (добавлением к текущему) или \c-rel[:<ptr>]\c~ (относительным к другому актору).";
ZCHECKER_ZCSETP_NODELIMCHARS          = "\c!Нет разделителя \c-(\":\" или \"=\") \c-для свойства \"%s\".";
ZCHECKER_ZCSETP_WRONGARG              = "\c!Неверное числовое значение в параметре \"%s\"";
ZCHECKER_ZCSETP_WRONGINTPROP          = "\c!Неизвестное целочисленное свойство \"%s\"";
ZCHECKER_ZCSETP_WRONGFLOATPROP        = "\c!Неизвестное дробное свойство \"%s\"";
ZCHECKER_ZCSETP_WRONGKEYWORDZ         = "\c!Неизвестная подстановка \"\c-%s\c!\" для свойства Z-координаты. \c~Должна быть \c-<дробным числом>\c~, \c-f[loor] \c~ (уровень пола), \c-c[eil]\c~ (уровень потолка минус высота актора) or \c-rawc[eil]|hc\c~ (уровень потолка)";
ZCHECKER_ZCSETP_WRONGKEYWORDHP        = "\c!Неизвестная подстановка \"\c-%s\c!\" для свойства health. \c~Должна быть \c-<целым>\c~, \c-max\c~ (~2.1 миллиарда) or \c-s[pawn]\c~ (исходное число здоровья)";
ZCHECKER_ZCSETP_EMPTYPROP             = "\c~Пропущено пустое свойство \"\c-%s\c~\".";
ZCHECKER_ZCSETP_UNKNOWNPROP           = "\c!Неизвестное свойство \c~\"\c-%s\c~:\c-%s\c~\".";
ZCHECKER_ZCSETP_NONRELATIVEPROP       = "\c~Значение свойства \c-%s\c~, не являющегося числовым, записано напрямую (без изменений).";
ZCHECKER_ZCSETP_SUCCESS               = "Свойства для актора \"%s\" успешно изменены.";


// File "ZCCommandsMap.zsc":

//  "zcev (*)":
ZCHECKER_ZCEV_HELP_TITLE              = "zcev goto <класс>|<категория>|start;zcev re[create|load];zcev map[2]|level[2]";
ZCHECKER_ZCEV_HELP_DESC               = "Управление миром на картах Everything. Исключением являются команды \"map\"/\"level\", которые переносят игрока на карты \"map everything\" и \"map everything_simple\".";
ZCHECKER_ZCEV_NOTEVMAP                = "Использование этой команды невозможно вне карт Everything.";

ZCHECKER_ZCEVGOTO_HELP_TITLE          = "zcev goto <класс>|<категория>|start;zcevg <класс>|<категория>|start";
ZCHECKER_ZCEVGOTO_HELP_DESC           = "На карте Everything: переход к определенному актору / к заданной категории (также распознаются сокращения) / к стартовой позиции.";
ZCHECKER_ZCEVGOTO_TREATASPREFIX       = "\c~Предполагается, что слово \"%s\" - полная форма введенного префикса \"\c-%s\c~\"\c-";
ZCHECKER_ZCEVGOTO_NOTCATEGORY         = "Неизвестная категория или ключевое слово \"%s\".";
ZCHECKER_ZCEVGOTO_EMPTYCATEGORY       = "Категория или ключевое слово не введены.";
ZCHECKER_ZCEVGOTO_NOTACTOR            = "\"%s\" - не класс Actor.";
ZCHECKER_ZCEVGOTO_SUCCESS             = "Найден актор %s на позиции %s.";
ZCHECKER_ZCEVGOTO_CATEGSUCCESS        = "Найден заголовок категории \c~\"\c-%s\c~\"\c- на позиции %s.";
ZCHECKER_ZCEVGOTO_CATEGNOTFOUND       = "Заголовок категории \"%s\" не существует на этой карте.";
ZCHECKER_ZCEVGOTO_NOTFOUND            = "Актор \"%s\" не существует на этой карте.";

ZCHECKER_ZCEVRE_HELP_DESC             = "Удаляет акторы на карте Everything, а затем пересоздает все, приводя уровень к первозданному виду.";

ZCHECKER_ZCEVRESECTOR_HELP_DESC       = "Перезагружает основные свойства секторов на всей карте Everything. Полезно, когда какие-либо акторы кардинально изменяют атрибуты секторов.";

ZCHECKER_ZCEVMAPWARP_HELP_DESC        = "Переносит игрока на карту \"Everything\", если в конце аргумента не вписано число \"2\"; переносит на \"Everything_simple\" в ином случае.";


// File "ZCCommandsMiscControl.zsc":

//  "zcthinkers":
ZCHECKER_ZCTHINKERS_HELP_TITLE        = "zcthinkers [l[ist]|t[ypes]];zcthinkers <тип> [l[ist]];zcthinkers <тип> rm|rem[ove]|del[ete] <порядковый номер>|<класс>;zcthinkers actors add[:<панель>] <порядковый номер>;zclistthinkers <тип>;zcaddlistget [<порядковый номер>] [<панель>]";
ZCHECKER_ZCTHINKERS_HELP_DESC         = "Произодит одну из операций над одним или несколькими объектами класса Thinker, принадлежащими StatNum-множеству <тип>. Команда может выводить полный список всех объектов Thinker, удалять их из мира по индексу или по имени, добавлять произвольных акторов в инфопанели.";
ZCHECKER_ZCTHINKERS_WRONGSTATNUM      = "StatNum лежит вне пределов. Должен находиться в диапазоне [0; %i].";
ZCHECKER_ZCTHINKERS_WRONGSELECT       = "Индекс указания должен быть положительным целым числом.";
ZCHECKER_ZCTHINKERS_NOTTHCLASS        = "\c!Невозможно разобрать \c-имя класса Thinker \"%s\".";
ZCHECKER_ZCTHINKERS_WRONGPANEL        = "\c!Неверный номер панели \c-\"%s\".";
ZCHECKER_ZCTHINKERS_WRONGPANELRANGE   = "Номер панели \c!должен лежать в пределах \c-[1..%i].";
ZCHECKER_ZCTHINKERS_UNKNOWNACTION     = "\c!Неизвестное действие \c-\"%s\".";
ZCHECKER_ZCTHINKERSADD_SELECTBOUNDS   = "Запрошенный индекс \c!находится вне доступного списка\c-.";
ZCHECKER_ZCTHINKERSADD_INSUFFPLACE    = "Невозможно добавить цель, недостаточно места в списке. Можно использовать присвоение в определенную панель через \"zcaddlistget 1\"..\"zcaddlistget %i\".";
ZCHECKER_ZCTHINKERSADD_SUCCESS        = "Добавлен произвольный актор %s.";
ZCHECKER_ZCTHINKERSADD_NOTACTOR       = "Объект Thinker \"%s\" - не класс Actor.";
ZCHECKER_ZCTHINKERSADD_NOSELECTION    = "Индекс актора для добавления \c!не указан\c-.";
ZCHECKER_ZCTHINKERSRM_SELECTBOUNDS    = "Запрошенный индекс \c!находится вне доступного списка\c-.";
ZCHECKER_ZCTHINKERSRM_SUCCESS         = "Удалено %i классов Thinker типа \"%s\"";
ZCHECKER_ZCTHINKERSRM_SUCCESSRAW      = "Удалено %i классов Thinker \chпроизвольного\c- типа \"%s\".";
ZCHECKER_ZCTHINKERSRM_NOSELECTION     = "Объекты для удаления не указаны ни по индексу, ни по названию класса.";
ZCHECKER_ZCTHINKERS_SECTIONACTORS     = "Акторы";
ZCHECKER_ZCTHINKERS_SECTIONSTATIC     = "Статичные";
ZCHECKER_ZCTHINKERS_SECTIONSECTORS    = "Секторы";
ZCHECKER_ZCTHINKERS_SECTIONOTHER      = "Другие";
ZCHECKER_ZCTHINKERS_HELPLISTPOSTFIX   = "Доступные типы (множественное число необязательно): \n%s\nили число для нестандартных StatNum (пользовательские: \cy%i\c-..\cy%i\c-).";
ZCHECKER_ZCTHINKERS_LISTATPOS         = "на";
ZCHECKER_ZCTHINKERS_LISTINVOWNER      = "inv.owner: ";
ZCHECKER_ZCTHINKERS_LISTTOTAL         = "Всего %i объектов класса Thinker типа StatNum %i.";

//  "zcpanel" (without "zcpanel save|store|load" because of unfinished/unclear subcommand UI):
ZCHECKER_ZCPANELCTL_HELP_TITLE        = "zcpanel <панель> m[ove] <новая позиция>;zcpanel <панель> c[opy] <новая позиция>;zcpanel <панель> save|store|load <псевдоним>;zcpanel (info [<панель>]|<панель> info)";
ZCHECKER_ZCPANELCTL_HELP_DESC         = "Производит действие над информационными панелями: перемещение, сохранение и загрузку ссылок на акторов. Также может отображать информацию (<info>) о наследовании, если указана <панель>, и обо всех псевдонимах в ином случае.";
ZCHECKER_ZCPANEL_NOACTORINPOS         = "Актора в позиции %i нет.";
ZCHECKER_ZCPANELINFO_HEADER           = "\c~Актор в позиции \c-%i \c~- \c-%s\c~ <%s>";
ZCHECKER_ZCPANELINFO_INHERITANCE      = "  \c~Наследован от \c-%s\c~ (указатель на класс: <%s>)";
ZCHECKER_ZCPANELSAVE_ALIASEXISTS      = "Псевдоним \"%s\" уже существует и связан с актором %s.";
ZCHECKER_ZCPANELSAVE_RELINKINGALIAS   = "Перепривязка псевдонима \"%s\" (его предыдущий актор уничтожен).";
ZCHECKER_ZCPANELSAVE_NOPANEL          = "Никакого актора к панели %s не привязано.";
ZCHECKER_ZCPANELSAVE_SUCCESS          = "\c~Актор \c-%s\c~ сохранен под псевдонимом \"\c-%s\c~\".";
ZCHECKER_ZCPANELLOAD_ACTORDESTROYED   = "Невозможно загрузить, актор под псевдонимом \"%s\" уничтожен.";
ZCHECKER_ZCPANELLOAD_WRONGALIAS       = "Псевдоним \"%s\" еще не объявлен.";
ZCHECKER_ZCPANELLOAD_SUCCESS          = "\c~Актор \c-%s\c~ загружен через псевдоним \"\c-%s\c~\".";
ZCHECKER_ZCPANELINFO_NOALIASES        = "\c~Псевдонимов акторов пока не было создано.";
ZCHECKER_ZCPANELINFO_LISTHEADER       = "\cyПсевдонимы акторов \c-(всего %i): ";
ZCHECKER_ZCPANELINFO_ALIASLINKED      = "  \"c~\"\c-%s\c~\" связан с \c-%s\c~, находящемуся на позиции %s.";
ZCHECKER_ZCPANELINFO_ALIASGONE        = "  \"c~\"\c-%s\c~\" не связан";

//  "zcvarsctl":
ZCHECKER_ZCVARSCTL_HELP_TITLE         = "zcvarsctl set|new <$название> <строка или подстановка>;zcvarsctl del[ete]|rm|rem[ove] <$название>|all;zcvarsctl l[ist]|i[nfo]";
ZCHECKER_ZCVARSCTL_HELP_DESC          = "Управление внутренними переменными классов ZChecker; идентификаторы должны начинаться с \"$\".\n  Доступные подстановки (должны начинаться с \"%\" или \"$\"):  \"$self\" (сам игрок), \"$lt\"|\"$linetarget\" (его цель), \"$target\" (его поле target), \"$master\" (его поле master), \"$tracer\" (его поле tracer).";
ZCHECKER_ZCVARSCTL_SETSUCCESS         = "Внутренняя переменная \"\cn%s\c-\" \cdустановлена\c- в \"%s\".";
ZCHECKER_ZCVARSCTL_LISTHEADER         = "\cyВнутренние переменные \c~(всего \c-%i\c~): ";

//  "zcinterface"/"zcif":
ZCHECKER_ZCIF_HELP_TITLE              = "zcif strequal <имя1>|<$переменная1> <имя2>|<$переменная2>;zcif dangerccmds|ev[map|erything];zcif panel <панель>;zcif panelinherit <панель> <класс>|<$переменная>;zcif panelequal <панель1> <панель2>;zcif validplacepos <строка>;zcif validpos <строка>;zcinterface panelfind <имя класса>;zcinterface panelfindfree";
ZCHECKER_ZCIF_HELP_DESC               = "Внешний интерфейс условного оператора для пользовательских псевдонимов (алиасов) команд и других подобных вещей. После отработки устанавливает целочисленную консольную переменную \"%s\". Для отслеживания результатов может быть включен уровень журналирования \"Разработка/API\".";
ZCHECKER_ZCIF_TRACEPREFIX             = "\csВнешний интерфейс\c~. \c-";



// File "ZCTooltipClasses.zsc":

// General tooltips:

ZCHECKER_TOOLTIP_ACTORMASKS_TIPS      = "Практически для всех команд, которые принимают первым аргументом название класса (\"`Czcsummon`x\", \"`Czcgive`x\", \"`Czctake`x\", \"`Czcev goto`x\", ...) можно использовать два подстановочных символа регулярных выражений:\
\t'`2*`2' для любых символов любого количества, в том числе и нуля; `dи`x\
\t'`2-`2' для любых символов количеством больших нуля.\
Если после подстановки окажется более одного кандидата, будет выведен `2нумерованный список`2. Указать номер строки можно с помощью `2:N`x или `2,N`x.\
Учтите, что для некоторых команд будет применяться фильтр наследования класса.\
Также Вы можете использовать подстановку из `1переменных ZChecker`x `d(должны начинаться с \"`2$`d\" или \"`2%`d\")`x:\
\t'`1$1`1', '`1$2`1', '`1$3`1' для названия класса из указанной панели. Эти названия будет сохраняться, пока следующий добавленный в инфопанель класс не перезапишет их;\
\t'`1$last`1' для последнего добавленного в инфопанели класса;\
\tЛюбую другую `1$переменную_zchecker`1, объявленную заранее или созданную через \"`Czcvarsctl`x\".";
ZCHECKER_TOOLTIP_ACTORMASKS_EXAMPLES  = "\"`Czcsummon z`2-`Cman 4`x\" создаст четырех акторов Zombieman;\
\"`Czcsummon sta`2*`Cff`x\" выведет список из элементов \"Staff\" и \"Staff`dPu`xff\";\
\"`Czcsummon sta`2-`Cff`x\" создаст \"StaffPuff\";\
\"`Czcsummon sta`2*`Cff`2:1`x\" также создаст \"StaffPuff\" `d(явным указанием элемента из списка)`x;\
\"`Czcsummon $2 15`x\" создаст пятнадцать акторов класса, сохраненного во второй панели в последний раз;\
\"`Czcgive 1 `2*`Ccard`x\" выведет список всех классов типа Inventory, оканчивающихся на \"card\" `d(при попытке дать инвентарь актору в первой инфопанели)`x;\
\"`Czctake 1 z`2-`Cman`x\" не отберет ничего у актора из первой панели: \"Zombieman\" - не класс Inventory.\
Более конкретные примеры могут быть найдены на страницах справки всех упоминавшихся здесь команд.";


ZCHECKER_TOOLTIP_CCMDRULES_HEADER     = "Об общих соглашениях для консольных команд (CCMD)";
ZCHECKER_TOOLTIP_CCMDRULES_TIPS       = "Большинство из консольных команд ZChecker, работающих с одним объектом за раз, имеют одинаковый смысл первого аргумента: указатель на нужного актора. Наиболее заметное исключение - команды семейства \"`Czcadd`C\", также имеющие параметр, указывающий на одну из инфопанелей.\
Аргумент `g<кто>`g и его производные могут принимать следующие ключевые слова:\
\t`~\"`C1`~\"`x..`~\"`C3`~\" (вплоть до предельного числа инфопанелей).`x Относит к актором, ранее сохраненным в информационных панелях;\
\t`~\"`Clt`~\"`x или `~\"`Clinetarget`~\".`x Получает первого осязаемого актора под курсором;\
\t`~\"`Cs`~\"`x или `~\"`Cself`~\".`x Указывает на самого вызывающего игрока;\
\t`~\"`Ccam`~\"`x или `~\"`Ccamera`~\".`x Относит к текущей камере игрока.\
По умолчанию - если аргумент не задан - подразумевается использование `Clinetarget`C.";
ZCHECKER_TOOLTIP_CCMDRULES_EXAMPLES   = "\"`Czcgive lt clip 4`x\" выдает 4 Clips цели под курсором (`1l`2ine`1t`2arget`2);\
\"`Czcgive clip 4`x\" делает то же, что и команда выше `~(аргумент по умолчанию - `2linetarget`~)`x;\
\"`Czcgive 1 clip 4`x\" выдает 4 Clips актору в `11`x-й информационной панели;\
\"`Czcgive self clip 4`x\" `~или`x \"`Czcgive s clip 4`x\" выдает 4 Clips себе (`1s`2elf`x) - то есть текущему игроку;\
\"`Czcsetflag 1 noblockmap`C\" переключает флаг актору в `11`x-й инфопанели;\
\"`Czcsetflag cam noblockmap`C\" переключает флаг камере, через которую сейчас смотрит игрок.\
Более конкретные примеры могут быть найдены на страницах справки всех команд, поддерживающих этот формат.";


ZCHECKER_TOOLTIP_EVERYTHINGMAP_HEADER = "О картах \"Everything\"";
ZCHECKER_TOOLTIP_EVERYTHINGMAP_TEXT   = "Уровни с названием \"`2Everything`2\" являются универсальными картотеками акторов.\
На данный момент в ZChecker присутствуют две карты:\
\"`2Everything`2\" от StormCatcher.77. Учтите, в бета-версиях и предварительных сборках ZChecker она может быть устаревшей; `~и`x\
\"`2Everything_simple`2\", легковесный, но полностью функциональный вариант.\
\t`yВнимание: в некоторых модификациях обычное создание акторов - без специальных условий - может блокироваться `d(впрочем, вполне возможно, что не намеренно)`y. `xПоследствия могут быть совершенно разными, от спама в консоль предупреждающими сообщениями до вылета игрового движка. Если Вы обнаружите подобное поведение, имеет смысл связаться с авторами той модификации. Или с командой LLDM, но в большинстве случаев мы в итоге переадресуем Вас на них же.";
ZCHECKER_TOOLTIP_EVERYTHINGMAP_EXAMPLES = "\"`Cmap everything_simple`C\" сменяет уровень на карту Everything (упрощенную версию);\
\"`Czcev map2`x\" на практике делает то же самое.";


// Console commands tooltips:
ZCHECKER_TOOLTIP_ZCHELP_EXAMPLES      = "\"`Czchelp`x\" без параметров выведет краткую справку по наиболее часто используемым консольным командам (CCMDs);\
\"`Czchelp all`x\" отобразит полную справку, включая полный список всех команд.;\
\"`Czchelp -a`x\" аналогична предыдущей команде `~(это для *nix-пользователей вроде меня)`~;\
\"`Czchelp zcadd`x\" выведет подробную справку с примерами использоования для консольной команды \"`Czcadd`C\";\
\"`Czchelp add`x\" аналогична предыдущей `~(префикс \"zc\" необязателен)`~;\
\"`Czcadd help`x\" - альтернативная форма для двух предыдущих команд;\
\"`Czchelp summon`x\" выведет подробную справку с примерами для CCMD \"`Czcsummon`C\";\
\"`Czcsummon help`x\" сделает то же, что и команда выше.";


ZCHECKER_TOOLTIP_ZCADD_TEXT           = "`yПримечание`x: акторы в инфопанелях не сохраняются при любой перезагрузке уровня. `~Как-нибудь я перепишу эту часть системы...`x";
ZCHECKER_TOOLTIP_ZCADD_TIPS           = "Все объекты в перечне \"`Czcaddlistget`x\" принадлежат множеству акторов (а вернее, множеству `2StatNum 100`x). Некоторые модификации намеренно уходят от этого правила, например, для повышения производительности.";
ZCHECKER_TOOLTIP_ZCADD_EXAMPLES       = "\"`Czcadd 3`x\" добавляет цель под курсором в третью инфопанель;\
\"`Czcadd weap`x\"`d/`x\"`Czcaddweap`x\" добавляет текущее оружие в первую свободную панель (если и то, и то есть);\
\"`Czcadd self 1`x\"`d/`x\"`Czcaddself 1`x\" добавляет актора игрока в первую панель;\
\"`Czcaddlistget`x\" выводит список всех акторов на уровне;\
\"`Czcaddlistget 13 2`x\" добавляет 13-й элемент со списка акторов во вторую информационную панель.";


ZCHECKER_TOOLTIP_ZCGIVE_EXAMPLES      = "\"`Czcgive shell 3`x\" выдает цели под курсором 3 shell;\
\"`Czcgive s clip 15`x\" выдает 15 clip вызывающему игроку (`Gs`Yelf`x`d, то есть себе`x);\
\"`Czcgive 1 clip`x\" выдает 1 clip актору в `g1-й`x панели;\
\"`Czcgive 1 `2*`Ccard`x\" выводит список всех классов Inventory, оканчивающихся на \"card\" `d(при попытке выдачи предмета актору в первой панели`x);\
\"`Czcgive s `2*`Ccard`2:1 4`x\" выдает игроку (`Gs`Yelf`x) 4 предмета первого наименования из списка, в данном случае \"BlueCard\".";


ZCHECKER_TOOLTIP_ZCTAKE_EXAMPLES      = "\"`Czctake shell 3`x\" забирает у цели под курсором 3 shell;\
\"`Czctake s clip 15`x\" забирает 15 clips у вызывающего игрока (`Gs`Yelf`x`d, то есть себе`x);\
\"`Czctake 1 clip`x\" забирает 1 clip у актора в `g1-й`x панели;\
\"`Czctake 1 `2*`Ccard`x\" выводит список всех классов Inventory, оканчивающихся на \"card\" `d(при попытке отбирания предмета у актора в первой панели`x);\
\"`Czctake s `2*`Ccard`2:1 4`x\" забирает у игрока (`Gs`Yelf`x) 4 предмета первого наименования из списка, в данном случае \"BlueCard\".";


ZCHECKER_TOOLTIP_ZCACT_TIPS           = "Не все акторы могут быть убиты или воскрешены; при подобной попытке будет выведено сообщение о неудаче.\
Воскрешение мертвого игрока не поддерживается. Используйте вместо этого встроенную команду \"`Cresurrect`C\".";
ZCHECKER_TOOLTIP_ZCACT_EXAMPLES       = "\"`Czcact rm`C\" удаляет цель под курсором из памяти (как встроенная команда \"`Cremove`C\", но с одним актором);\
\"`Czcact kill`C\" убивает цель под курсором;\
\"`Czcact 1 res`C\" пытается воскресить актора в первой инфопанели;\
\"`Czcact s xkill`C\" убивает игрока. Примерно как если бы на себя (`Gs`Yelf`x) были применены встроенные команды \"`Cmdk`C\" или \"`Ckill`C\".";


ZCHECKER_TOOLTIP_ZCSUMMON_EXAMPLES    = "\"`Czcsummon clip`C\" создает актор Clip;\
\"`Czcsummon r`2-`Claun`2-`x\" создает R`~ocket`xLaun`~cher`x;\
\"`Czcsummon z`2*`Cman 4`x\" порождает четырех акторов Zombieman;\
\"`Czcsummon $2 15`x\" создает 15 акторов того класса, который находится во второй панели;\
\"`Czcsummon `2*`Ccard`x\" выведет список всех классов, оканчивающихся на \"card\";\
\"`Czcsummon armo`2-`Cr`x\" создаст актора Armorer `~(продавец из игры Strife)`x;\
\"`Czcsummon armo`2*`Cr`2:2`x\" также создаст актора Armorer `d(явным выбором второго варианта из списка \"`xArmor`d\" и \"`xArmo`dre`xr`d\")`x;\
\"`Czcsummon z`2*`Cman 3 f`x\" или \"`Czcsummon z`2*`Cman 3 friendly`x\" создаст трех дружественных (`1friendly`x) Zombieman;\
\"`Czcsummon z`2*`Cman friendly`d,`Cadd:3`x\" породит дружественного Zombieman и добавит есть в `g3`x-ю `gинфопанель`x;\
\"`Czcsummon shot`2*:1`C noinfight`d,`Crelang:180`d,`Ctid:4`d,`Chp:99999`x\" породит одного ShotgunGuy, отвернутого от игрока, не желающего сражаться с другими монстрами (infight), имеющего TID = 4, а также крайне высокое значение здоровья.";


ZCHECKER_TOOLTIP_ZCSETPROP_EXAMPLES   = "\"`Czcsetprop hp:255`C\" `~или`x \"`Czcsetprop health:255`C\" устанавливает здоровье цели под курсором в `g255`x;\
\"`Czcsetp s hp:255`C\" устанавливает здоровье игрока (`Gs`Yelf`x, то есть самого себя) в `g255`x;\
\
\"`Czcsetp 1 add x:10`C\" перемещает актора в `G1`x-й инфопанели на 10 маппикселей по оси X;\
\"`Czcsetp 3 add x:0.5`~,`Cy:0.333`C\" перемещает актора в `G3`x-й инфопанели по диагонали (и по X и Y);\
\"`Czcsetp 1 add alpha:-0.2`C\" уменьшает непрозрачность (альфа-канал) актора в `G1`x-й панели. `YИмейте в виду, актор должен иметь подходящий RenderStyle`x;\
\
\"`Czcsetp 1 relative:1 alpha:-0.2`C\" делает то же, что и предыдущая команда (\"relative\" - \"относительно\");\
\"`Czcsetp 1 rel:s hp:0`C\" устанавливает здоровье актора в `G1`x-й инфопанели равным здоровью игрока `~(как сумма `xplayer.health`~ и `x0`~)`x;\
\"`Czcsetp 1 rel hp:0`C\" - то же, что и команда выше: \"`Yrel`x\" без аргументов считается за \"`Yrel`~:`Gself`x\";\
\"`Czcsetp 2 master:self,scalex:0.75,scaley:2`C\" устанавливает `Gуказатель master`x на вызывающего игрока, а также меняет `Gscale`x (`GX и Y`x по-разному) для актора во `G2`x-й панели;\
\
\"`Czcsetp hp:spawn`C\" `~или`x \"`Czcsetprop hp:s`C\" сбрасывает здоровье цели под курсором до исходного значения;\
\"`Czcsetp z:ceil`C\" перемещает цель под курсором под потолок;\
\"`Czchate`C\" заставляет цель под курсором ненавидеть игрока `~(на самом деле вызывается \"`Czcsetprop target:self`~\")`x;\
\"`Czchate 2 none`C\" `~или`x \"`Czchate 2 null`C\" очищает текущую цель (`Gtarget`G) у актора во `G2`x-й панели `~(на самом деле вызывается \"`Czcsetprop 2 target:null`~\")`x.";


ZCHECKER_TOOLTIP_ZCSETSTATE_EXAMPLES  = "\"`Czcsetstate missile`C\" установит стейт цели под курсором в \"`2Missile:`2\" (если такой стейт у нее существует);\
\"`Czcsetst missile`C\", \"`Czcsets missile`C\" или \"`Czcst missile`C\" - аналогично предыдущей команде;\
\"`Czcsetst 1 death`C\" установит актору в `y1`2-й`2 инфопанели стейт \"`2Death:`2\";\
\"`Czcsetst s melee`C\" установит игроку (`ys`xelf, то есть себе) стейт \"`2Melee:`2\".";


ZCHECKER_TOOLTIP_ZCSETFLAG_TEXT       = "Вы можете использовать следующие слова для явного задания результата:\
\t`g1`x, `gt`x, `gtrue`d or `gset`x: для установки флага;\
\t`g0`x, `gf`x, `gfalse`d or `greset`x: для сброса флага.\
Учтите, что мгновенно (без задержки в такт) будут изменяться только основные флаги для отладки. В частности:\
\t`2Физика`x: SOLID, SHOOTABLE, NONSHOOTABLE, NOGRAVITY, NOINTERACTION, NOBLOCKMAP, NOSECTOR;\
\t`2Поведение`x: FRIENDLY, FLOAT, NOTARGET, FORCEINFIGHTING, NOINFIGHTING;\
\t`2Защиты`x: BUDDHA, NODAMAGE, DORMANT, INVULNERABLE; `dand`x\
\t`2Другое`x: BRIGHT.\
Можно отключить особую обработку для них с помощью ключевых слов \"nospec\", \"raw\" или \"acs\" в качестве последнего аргумента (если не нужно переключать флаг, то стоит отделить этот параметр запятой или двоеточием).";
ZCHECKER_TOOLTIP_ZCSETFLAG_EXAMPLES   = "\"`Czcsetflag friendly`x\", \"`Czcsetf friendly`x\" или \"`Czcsf friendly`x\" переключают флаг `2+FRIENDLY`x для цели под курсором;\
\"`Czcsetf 1 solid t`x\" или \"`Czcsetf 1 solid 1`x\" взводит флаг `2+SOLID`x для актора в первой инфопанели;\
\"`Czcsetf s touchy`x\" устанавливает флаг `2+TOUCHY`x себе (`1s`2elf`x), что заставляет игрока умирать от любого прикосновения. Имейте в виду, что этот флаг не находится в быстром доступе;\
\"`Czcsetf solid raw`x\" переключает флаг с задержкой в один такт, принудительно используя ACS-машину;\
\"`Czcsetf solid 1,nospec`x\", \"`Czcsetf solid acs:1`x\" взводят указанный флаг, также с принудительным использованием ACS-машины.";


ZCHECKER_TOOLTIP_ZCEV_TIPS            = "Разноцветные маркеры рядом с каждым из созданных классов - интерактивные информационные акторы:\
\tПо умолчанию команды ZChecker, примененные на них, будут перенаправляться на связанные с ними акторы. Это поведение может быть изменено по переключению опции \"Отключить особую обработку ZC-классов\".\
\tВы можете нажать `2+USE`2 (\"использовать\") для того, чтобы пересоздать умершего или исчезнувшего актора, связанного с ним.\
\t\cd[Зеленый цвет]\c- показывает, что связанный актор в данный момент жив, \ci[желтый]\c- сообщает, что он мертв. \cg[Красный цвет]\c- используется для исчезнувших акторов.\
\tИнфоакторы расположены на разных высотах, отвечающих за инициализационные флаги связанных акторов. `1Наивысшее положение`1 (также имеет наивысший приоритет) утверждает, что у актора установлен флаг `1+SPAWNCEILING`1, `2позиция посередине`2 символизирует взведенный флаг `2+NOGRAVITY`2, и самая нижняя позиция означает отсутсвие таких флагов.\
\
Справка по консольной команде `Czcevg`C (\"`Czchelp zcevg`C\") содержит `gсписок всех категорий`g, представленных на карте.";
ZCHECKER_TOOLTIP_ZCEVGOTO_TEXT        = "В целом Вы можете перейти к заглавиям категорий по их `2приблизительным сокращенным названиям`2 (всегда ровно одно слово). Если введенный текст совпадает с каким-либо названием класса, приоритет будет отдан последнему, и Вас переместит к актору. Для принудительного прыжка к категории можно использовать \"решетку\" `~(\"`1#`~\")`~ в начале слова.\
Все категории на картах Everything. Примеры в скобках не являются исчерпывающими списками:\
\t`AМонстры`A : `2Monsters`2 `~(\"`~m`~\", \"`~mons\"`~ и т. д.)`~, `2Large monsters`2 `~(крупные; \"`~lm`~\", \"`~ml`~\", \"`~largem`~\")`~ и `2Huge monsters`2 `~(огромные; \"`~hm`~\")`~;\
\t`AПредметы`A: `2Weapons`2 `~(\"`~iw`~\", \"`~weaps`~\")`~, `2Ammo`2 `~(\"`~ia`~\")`~, `2Health & armor`2 `~(\"`~ih`~\")`~, `2Powerups`2, `2Keys`2 and `2Other items`2;\
\t`AОбъекты`A : `2Impassible/solid`2 `~(плотные/непроходимые; \"`~impass`~\", \"`~ds`~\")`~, `2Large solid`2 `~(\"`~dli`~\")`~, `2Shootable`2 `~(расстреливаемые)`~, `2Large shootable`2;\
\t`AДекор`A   : `2Passable/ethereal`2 `~(бесплотные/проходимые; \"`~ether`~\", \"`~dp`~\")`~, `2Large passable`2, `2+NOBLOCKMAP`2 `~(\"`~nobl`~\")`~, `2+NOINTERACTION`2;\
\t`AОгромное`A: `2Huge decorations`2 `~(огромные; \"`~hd`~\")`~;\
\t`AСнаряды`A : `2Projectiles`2 `~(\"`~missiles`~\", \"`~proj`~\")`~;\
\t`AДругое`A  : `2Player classes`2 `~(классы игроков; \"`~pl`~\")`~, `2Special`2 `~(специальное; \"`~other`~\", \"`~special`~\")`~.\
Вы также можете использовать `1меню карт Everything`1 для перехода к любой категории.";
ZCHECKER_TOOLTIP_ZCEVGOTO_EXAMPLES    = "\"`Czcev goto doomimp`C\", \"`Czcev g doomimp`C\" и \"`Czcevg doomimp`C\" переместит игрока к указанному актору (здесь, очевидно, к `2DoomImp`2).\
\"`Czcevg shotgun`C\" перенесет игрока к предмету `2Shotgun`2;\
\"`Czcevg z*man`C\" телепортирует игрока к актору `2Z`~ombie`2man`x;\
\"`Czcevg *armor`C\" выведет список всех предметов с окончанием \"armor\";\
\"`Czcevg *armor:4`C\" перенесет игрока к `2BlueArmor`2;\
\"`Czcevg $last`C\" телепортирует игрока к последнему актору, добавленному в инфопанели (если он существует на карте);\
\"`Czcevg #monsters`C\" или \"`Czcevg #m`C\" перенесет игрока к категории \"Monsters\";\
\"`Czcevg mons`C\" сделает то же, что и команда выше, если актора \"`2mons`2\" не существует. Иначе - телепортирует к нему;\
\"`Czcevg #ammo`C\" перенесет игрока к категории \"Ammo\". Без \"решетки\" - к актору под названием \"Ammo\" (если он существует на карте).";


ZCHECKER_TOOLTIP_ZCTHINKERS_TIPS      = "Используйте команду \"`Czcthinkers <тип> rm`x\" `yтолько если Вы знаете, что делаете`x; она без труда полностью сломать уровни и игру, вплоть до вылета движка.\
Вместо слов-идентификаторов можно использовать явный номер StatNum.\
Все StatNum условны: некоторые модификации могут использовать нестандартное распределение по множествам.\
\"`Czcaddlistget`x\" - лишь удобный псевдоним, на деле вызывающий рассматриваемую команду;\
Удаление внутренних классов Thinker по имени может проводиться с помощью аргумента \"rm:internal\" или его аналога. Вместе с тем указание подобного класса по списочному номеру никто не отменял.";
ZCHECKER_TOOLTIP_ZCTHINKERS_EXAMPLES  = "\"`Czcthinkers l`x\"/\"`Czclistthinkers`x\" выводит справочный список по всем распознаваемым типам StatNum;\
\"`Czcthinkers a l`x\"/\"`Czclistthinkers actors`x\" выводит список всех акторов класса Thinker, принадлежащих множеству акторов (`~STAT_DEFAULT`~);\
\"`Czcthinkers 100 l`x\" сделает то же, что и команда выше: алиас `2actors`x на самом деле переводится в значение `y100`x;\
\"`Czcthinkers a rm z*man`x\" удаляет все классы Zombieman на уровне `d(действие аналогично команде \"`Cremove zombieman`d\");\
\"`Czcthinkers static rm 1`x\" удаляет первый элемент в списке объектов класса Thinker, принадлежащих статическому множеству (`~STAT_STATIC`~);\
\"`Czcthinkers a add`g:2`C 17`x\" добавляет 17-й актор из списка во вторую инфопанель;\
\"`Czcthinkers sl rm`2:raw`C glow`x\" удаляет все объекты класса Thinker с названием \"glow\", вне зависимости от их скрытости, в множестве управления посекторным освещением (`~STAT_LIGHT`~).";


ZCHECKER_TOOLTIP_ZCPANELCTL_TEXT      = "Примите во внимание, что текущая система псевдонимов (алиасов) не особо удобна, так что рекомендовать к использованию ее не буду. С другой стороны, она полностью работает.";
ZCHECKER_TOOLTIP_ZCPANELCTL_EXAMPLES  = "\"`Czcpanel 1 m 3`x\" перемещает актора из 1-й инфопанели в 3-ю;\
\"`Czcpanel info 2`x\", \"`Czcpanel 2 info`x\" или \"`Czcinfo 2`x\" показывает некоторую информацию об указанном (втором) акторе.";


ZCHECKER_TOOLTIP_ZCINTERFACE_TEXT     = "`yЭта команда в основном используется в автоматизации действий через `x\"`Calias`x\" и, вероятнее всего, в других случаях будет малополезна.";
ZCHECKER_TOOLTIP_ZCINTERFACE_TIPS     = "Команда \"`Czcif`x\" (\"ZC-если\") на самом деле является просто сокращением от \"`Czcinterface`x\" (\"ZC-интерфейс\"), а значит, не независима.\
Эта команда возвращает целочисленное значение результата в консольную переменную \"`g%s`x\". Ее можно проверять через встроенную команду \"`Ctest`x\" - см. раздел \"\HПримеры\x\" ниже.\
Учитие, присвоение результата команды будет отложено на 1 такт мира ради упреждения рассинхронизации в мультиплеере. Поэтому может быть полезна встроенная команда \"`Cwait`x\".";
ZCHECKER_TOOLTIP_ZCINTERFACE_EXAMPLES = "Этот алиас будет создавать указанного актора (`g%%1`g) и добавлять его в первую инфопанель, `yтолько если актора в этой панели еще нет`x:\
`Calias zcsa1 `x\"`2zcif panel 1; wait 1; zcvarsctl set $tmp %1; test == $mcm_zchecker_var_interface 0 \"zcsummon $tmp 1 add:1\"; zcvarsctl rm $tmp`x\";\
\
Следующий алиас проверяет равенство строке \"DoomImp\" названия последнего добавленного в инфопанели актора `~(через название класса, сохраненного в переменной `1$last`~)`x\
`Calias testforimp3 `x\"`2zcinterface strequal $last doomimp; wait 1; test == $mcm_zchecker_var_interface 1 \"echo Imp.\" \"echo Not an Imp.\"`x\".\
\
Этот алиас бесконечно проверяет, являются ли одинаковыми указатель на своего игрока (`1self`x) и указатель на камеру игрока (`1self.player.camera`x):\
`Calias isselfcamera `x\"`2zcif panelsequal self camera`~; `2wait 1`~; `2test == $mcm_zchecker_var_interface 0 \"echo Player camera view was changed from default.\"`~; `2wait 1`~; `2isselfcamera`x\".";


