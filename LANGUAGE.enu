//
// Tab size for this file: 4.
//
// "ZCGlobal.Log()" and all of its derivatives overrides next colors placeholders:
//	'\c-' is a "LLCOLOR_MAIN" 	 (default user messages color, usually gray);
//	'\c!' is a "LLCOLOR_WARNING" (yellow);
//	'\c~' is a "LLCOLOR_DARK"	 (darkgray).
//


[enu default]


// === General and core ===

// Commons:
ZCHECKER_GREETINGS_SUCCESS 		= "ZChecker v%s initialized successfully. Total %i console commands, %i info panels.";
ZCHECKER_GREETINGS_WARNINGS 	= "ZChecker v%s initialized \c!with warnings\c-. Total %i console commands, %i info panels.";

ZCHECKER_CCMDSHELP_USAGE		= "Usage";
ZCHECKER_CCMDSHELP_TIPS			= "Tips";
ZCHECKER_CCMDSHELP_EXAMPLES		= "Examples";
ZCHECKER_CCMDS_DANGERALLOWEDWARN= "Warning";
ZCHECKER_LOG_EMERGENCY_PREFIX 	= "[ZChecker emergency]";

// Network events intercepting:
ZCHECKER_NETEVENTINTC_NETEVENT	= "Netevent";
ZCHECKER_NETEVENTINTC_MANUAL	= "Manual";
ZCHECKER_NETEVENTINTC_SYSTEM	= "System";
ZCHECKER_NETEVENTINTC_TIMEAT	= "at";
ZCHECKER_NETEVENTINTC_FROMPLAYER= "from player #";



// === Menus ===
//     [WIP]

ZCHECKER_MENU_SUBMENU_DFLTLABEL	= "Submenu. ";
ZCHECKER_MENU_SUBMENU_DFLTMORE	= "[...more]";

ZCHECKER_MAINMENU_TITLE			= "ZChecker control";
ZCHECKER_OPTIONSMENU_NOHANDLER	= "\cxError\ci: ZChecker cannot be initialized.\n\ciSee more info in options menu above.";

ZCHECKER_MAINMENU_DIV_GENERAL	= "General categories";
ZCHECKER_MAINMENU_INFOPANELS	= "Informational panels control";
ZCHECKER_MAINMENU_CCMDS			= "Call console command [WIP]";
ZCHECKER_MAINMENU_EVMAP			= "\"Everything\" map settings";
ZCHECKER_MAINMENU_VISUAL		= "HUD & visual settings";
ZCHECKER_MAINMENU_OPENINFOPANELS= "Open infopanels menu key";
ZCHECKER_MAINMENU_OPENCCMDS		= "Open CCMD call menu key";
ZCHECKER_MAINMENU_OPENEVMAP		= "Open \"Everything\" map settings key";
ZCHECKER_MAINMENU_OPENVISUAL	= "Open visual settings menu key";

ZCHECKER_MAINMENU_DIV_OTHER		= "Other settings";
ZCHECKER_MAINMENU_NETEVENTS		= "Netevents info intercepting";
ZCHECKER_MAINMENU_NETEVENTS_TIP	= "Tries to catch a network events information.";

ZCHECKER_MAINMENUOPT_LOGLEVEL1	= "1. General";
ZCHECKER_MAINMENUOPT_LOGLEVEL2	= "2. Detailed (default)";
ZCHECKER_MAINMENUOPT_LOGLEVEL3	= "3. Debug mode";



// === An "Everything" maps ===

ZCHECKER_EVMAP_INITERROR			= "%s::RecreateEverything(). Cannot run due to the map errors, terminating.";
ZCHECKER_EVMAP_TOTALRECREATE		= "Recreating/reloading map...";
ZCHECKER_EVMAP_AUTOIDDQD			= "Auto-godmode enabled.";
ZCHECKER_EVMAP_AUTONOTARGET			= "Auto-notarget enabled.";
ZCHECKER_EVMAPSPAWN_SUCCESS			= "\cqsummoned class \"\cd%s\cq\"\c~ (sprite \"%s\").";
ZCHECKER_EVMAPSPAWN_EMPTYSPRITESKIP	= "class \"%s\" omitted because of empty sprite \"%s\".";
ZCHECKER_EVMAPSPAWN_MISSPRITESKIP	= "class \"%s\" omitted because of empty sprite \"%s\" (was %s).";
ZCHECKER_EVMAPSPAWN_INVISSKIP		= "class \"%s\" omitted because of +STEALTH/+INVISIBLE flag set.";
ZCHECKER_EVMAPSPAWN_PLCHUNKSKIP		= "class \"%s\" omitted due to inheritance from the \"PlayerChunk\".";
ZCHECKER_EVMAPSPAWN_REPLACEDSKIP	= "class \"%s\" replaced and thus omitted.";
ZCHECKER_EVMAPSPAWN_REPLRESTRICTEDSKIP = "replaced by \"%s\" class \"%s\" is restricted.";
ZCHECKER_EVMAP_RESUMMON				= "\c~Spawned \c-%s\c~.";
ZCHECKER_EVMAP_INFOSTR_REPLACES		= "%s \cnreplaces\c- %s";



// === Console commands ===
//          [WIP]

// General:

ZCHECKER_CCMD_WIP				= "\c~[Work-in-progress command, may behave strangely or not work at all].";

// "ZCConsoleCommand::GetPlaceTestee()" and "ZCConsoleCommand::LinetraceActor()".
ZCHECKER_GETACTOR_LTSKIPACTOR	= "Skipped special linetarget class \"%s\".";
ZCHECKER_GETACTOR_LTNOACTORS	= "No available linetarget actors found.";
ZCHECKER_GETACTOR_EMPTYPOS		= "No actor in position %i.";
ZCHECKER_GETACTOR_WRONGPOS		= "\c!Wrong position %i\c- (must be in range [1..%i]).";
ZCHECKER_GETACTOR_UNKNOWNKEYWORD= "\c!Unknown placeholder \"%s\" in position %i\c~. Possible values: \c-1..%i, s[elf], cam[era], lt\c~|\c-linetarget\c~.";

// "ZCConsoleCommand::ParseSpecialActorName()".
ZCHECKER_PARSENAME_WRONGSELECT	= "\c!Selection \"%s\" isn't a positive integer.";
ZCHECKER_PARSENAME_EMPTYKEYWORD	= "\c!Skipped\c- empty placeholder \"%s\". You may use \"%%null\" or \"%%none\" to override this.";
ZCHECKER_PARSENAME_UNSETVAR		= "\c!Skipped\c- unset internal variable \"%s\".";
ZCHECKER_PARSENAME_NOCLASSCHARS	= "\c!Not provided any class identifier characters.";
ZCHECKER_PARSENAME_WITHFILTER 	= "\c~ with filter \cj%s\c~";
ZCHECKER_PARSENAME_NOTFOUND	 	= "Cannot find any suitable actor name candidates";
ZCHECKER_PARSENAME_FOUNDSOME 	= "Found more than one suitable actor name candidate";
ZCHECKER_PARSENAME_SELECTBOUNDS	= "\c!Selected index \cn%i \c!is out of range\c- of the found candidates.";
ZCHECKER_PARSENAME_IGNORESELECT = "\c!Ignoring numerical selection %i\c-";

// "ZCConsoleCommand::RemoveWorldThinker()".
ZCHECKER_REMOVELIVEPLAYERPREVENT= "\crIt's better not to destroy a live player %i\c-. \c!Terminated\c-.";
ZCHECKER_REMOVELIVEPLAYERWARNING= "destroying live player";

// "ZCAddCommand::HandleDuplicateActorFields()".
ZCHECKER_ADD_DUPLICATELINK		= "\c~Found \c!duplicate link \c~for actor \c-%s\c~ in panel %i.";


// File "ZCCommandsGeneral.zsc":

// "zchelp":
ZCHECKER_ZCHELP_CANNOTFIND			= "\czZChecker help: \cxcannot find ZChecker console command \c~\"\c-%s\c~\"\cx.";
ZCHECKER_ZCHELP_VERBOSETITLE		=
"\cyZChecker \chv%s.\n"
"  (c)\cj JSO_x \cha.k.a.\cj Morthimer McMare\ch;\n"
"  (c)\cj LLDM-Doom-modding\ch team.\n\n";
ZCHECKER_ZCHELP_HEADERCOMMONCCMDS	= "\cjAvailable commands, common used\c-:";
ZCHECKER_ZCHELP_HEADERALLCCMDS		= "\cjAvailable commands, complete list\c-:";

// "zcadd":
ZCHECKER_ZCADD_ADDINSUFFPLACE		= "Cannot add target to list, insufficient place. Try set target to list directly via \"zcadd 1\"..\"zcadd %i\".";
ZCHECKER_ZCADD_NOWEAPON				= "No weapon, cannot add.";
ZCHECKER_ZCADD_FORCENOTFOUND		= "Cannot find any suitable actors.";
ZCHECKER_ZCADD_SUCCESSCOMMON		= "Added actor %s";
ZCHECKER_ZCADD_SUCCESSPLAYER		= "Added a PlayerPawn actor %s";
ZCHECKER_ZCADD_SUCCESSWEAPON		= "Added a StateProvider actor %s";
ZCHECKER_ZCADD_SUCCESSFORCED		= "Added an arbitrary actor %s";
ZCHECKER_ZCADD_USINGPREVLINK		= "\c~Using previous link in panel \cj%i\c~ for actor \cu%s\c~.";

// "zcrem"/"zcclear":
ZCHECKER_ZCREM_SUCCESS				= "Removed actor \"%s\" <%s> from position %i.";
ZCHECKER_ZCREM_SUCCESSTOTAL			= "All actors cleared from the infopanels.";
ZCHECKER_ZCREM_EMPTYPOS				= "Cannot remove, there's no actor in position %i.";


// File "ZCCommandsActorAlter.zsc":

// "zcact":
ZCHECKER_ZCACT_CANNOTREVIVE		= "Cannot revive actor %s";
ZCHECKER_ZCACT_REVIVED			= "Revived actor %s";
ZCHECKER_ZCACT_REVIVEVANISH		= "Actor %s revived, but vanished.";
ZCHECKER_ZCACT_REVIVEBLOCKED	= "Actor %s reviving \cablocked\c-.";
ZCHECKER_ZCACT_KILLED 			= "Killed actor %s.";
ZCHECKER_ZCACT_CANNOTKILL		= "Cannot kill actor %s";
ZCHECKER_ZCACT_XKILLED 			= "Extremely killed actor %s.";
ZCHECKER_ZCACT_CANNOTXKILL		= "Cannot extremely kill actor %s";
ZCHECKER_ZCACT_DESTROYED		= "Destroyed actor %s.";

// "zcgive":
ZCHECKER_ZCGIVE_SUCCESS			= "Item \"%s\" is given to the actor \"%s\".";
ZCHECKER_ZCGIVE_CANNOTRECEIVE	= "Actor %s cannot receive item.";
ZCHECKER_ZCGIVE_NOTINVCLASS		= "\"%s\" isn't an Inventory actor.";

// "zctake":
ZCHECKER_ZCTAKE_SUCCESS			= "Item \"%s\" is taken from the actor \"%s\".";
ZCHECKER_ZCTAKE_CANNOTRECEIVE	= "Cannot take item from actor %s.";
ZCHECKER_ZCTAKE_NOTINVCLASS		= "\"%s\" isn't an Inventory actor.";

// "zcsummon":
ZCHECKER_ZCSUMMON_CLAMPINT		= "\c!%s (%i) isn't in range [%i; %i]. \c-Clamped to %i.";
ZCHECKER_ZCSUMMON_CLAMPFLOAT	= "\c!%s (%f) isn't in range [%.3f; %.3f]. \c-Clamped to %.3f.";
ZCHECKER_ZCSUMMON_WRONGPANEL	= "\c!Wrong panel number \"%s\".";
ZCHECKER_ZCSUMMON_WRONGARG		= "\c!Wrong argument number for parameter %s.";
ZCHECKER_ZCSUMMON_WRONGDIGIT	= "\c!Value \"%s\" \c-for parameter \"%s\" \c!isn't a digit.";
ZCHECKER_ZCSUMMON_EMPTYVALUE	= "\c!Empty value for parameter \"%s\".";
ZCHECKER_ZCSUMMON_UNKNOWNPARAM	= "\c!Unknown parameter \"%s\"";
ZCHECKER_ZCSUMMON_UNKNOWNFLAG	= "\c!Unknown flag \"%s\".";
ZCHECKER_ZCSUMMON_LIMITPREVENT	= "Trying to summon more than 200 actors in once. \c~You may disable this limit switching the \"Allow dangerous actions\" option.";
ZCHECKER_ZCSUMMON_LIMITWARNING	= "summoning more than 200 actors";
ZCHECKER_ZCSUMMON_SUCCESS		= "Summoned %i %s \c~of class \"\cd%s\c~\".";
ZCHECKER_ZCSUMMON_ADDINSUFFPLACE= "Cannot add actor to list, insufficient place. Try set target to list directly via parameter \"panel:1\"..\"panel:%i\".";
ZCHECKER_ZCSUMMON_ADDONLYLAST	= "\c~Only last summoned actor added to the list.";
ZCHECKER_ZCSUMMON_CANNOTSUMMON	= "\caCannot summon actor class \cu\"\c-%s\cu\". It may be abstract or immediately destroyed in the BeginPlay() override.";
ZCHECKER_ZCSUMMON_NOTACTOR		= "\"%s\" isn't an Actor class.";

// "zcsetflag":
ZCHECKER_ZCSETFLAG_SUCCESS		= "Flag \"%s\" for actor %s is succesfully set to %i.";

// "zcsetprop":
ZCHECKER_ZCSETP_RELPLAYER		= "\c~Base actor for relative properties \c-is set to caller player\c~.";
ZCHECKER_ZCSETP_UNKNOWNMODE		= "\c!Unknown mode \c~\"\c-%s\c~\". Must be empty, \c-raw\c~, \c-add\c~ or \c-rel[:<ptr>]\c~.";
ZCHECKER_ZCSETP_NODELIMCHARS	= "\c!No delimiter character \c-(\":\" or \"=\") \c!provided \ñ-for property \"%s\".";
ZCHECKER_ZCSETP_WRONGARG		= "\c!Wrong argument number in parameter \"%s\"";
ZCHECKER_ZCSETP_WRONGINTPROP	= "\c!Unknown integer property \"%s\"";
ZCHECKER_ZCSETP_WRONGFLOATPROP	= "\c!Unknown float-point property \"%s\"";
ZCHECKER_ZCSETP_WRONGKEYWORDZ	= "\c!Unknown placeholder \"\c-%s\c!\" for the Z coordinate property. \c~Must be \c-<float>\c~, \c-f[loor] \c~, \c-c[eil]\c~ or \c-rawc[eil]|hc\c~";
ZCHECKER_ZCSETP_WRONGKEYWORDHP	= "\c!Unknown placeholder \"\c-%s\c!\" for the health property. \c~Must be \c-<int>\c~, \c-max\c~ or \c-s[pawn]\c~";
ZCHECKER_ZCSETP_EMPTYPROP		= "\c~Skipped empty property \"\c-%s\c~\".";
ZCHECKER_ZCSETP_UNKNOWNPROP		= "\c!Unknown property \c~\"\c-%s\c~:\c-%s\c~\".";
ZCHECKER_ZCSETP_SUCCESS			= "Properties for actor \"%s\" succesfully changed.";


// File "ZCCommandsMap.zsc" ("zcev*"):

ZCHECKER_ZCEV_NOTEVMAP			= "Cannot use command not on Everything map.";

// "zcev goto":
ZCHECKER_ZCEVGOTO_NOTACTOR		= "\"%s\" is not an Actor class.";
ZCHECKER_ZCEVGOTO_SUCCESS		= "Found actor %s at %s.";
ZCHECKER_ZCEVGOTO_NOTFOUND		= "Actor \"%s\" does not exist on this map.";

