// Common console variables.
server int mcm_zchecker_loglevel = 2;
server bool mcm_zchecker_allowdangerccmds = false;
server bool mcm_zchecker_internalclasses_nospecialhandling = false;

user int mcm_zchecker_min_sectorslines_tag	= 1;
user int mcm_zchecker_max_sectorslines_tag	= 700;

// General information panel variables.
user float mcm_zchecker_infopanel_startx	= 8.0;
user float mcm_zchecker_infopanel_starty	= 8.0;
user float mcm_zchecker_infopanel_offsetx	= 33.0;
user float mcm_zchecker_infopanel_scale		= 1.0;
user float mcm_zchecker_infopanelparts_y_gap= 0.55;
user int mcm_zchecker_infopanel_fonttype	= 0;

user bool mcm_zchecker_infopanel_dimenabled		= true;
user color mcm_zchecker_infopanel_dimcolor		= "00 00 00";
user float mcm_zchecker_infopanel_dimalpha		= 0.5;
user float mcm_zchecker_infopanel_dimborderwidth= 0.5;

// Internal string for the API between ZScript and ACS.
user noarchive string mcm_zchecker_internal_metastring;

// Awful decision, but string CVar cannot contain more than 255 characters...
user string mcm_zchecker_infopanelsorder_part0;
user string mcm_zchecker_infopanelsorder_part1;
user string mcm_zchecker_infopanelsorder_part2;
user string mcm_zchecker_infopanelsorder_part3;
user string mcm_zchecker_infopanelsorder_part4;
user string mcm_zchecker_infopanelsorder_part5;
user string mcm_zchecker_infopanelsorder_part6;
user string mcm_zchecker_infopanelsorder_part7;
user string mcm_zchecker_infopanelsorder_part8;
user string mcm_zchecker_infopanelsorder_part9;



// Information panel parts settings.
user bool mcm_zchecker_info_main			= true;	 // Classname, pointer.
user int  mcm_zchecker_infovar_maintags		= 2;	 //  \_ "Never", "If different from classname", "Always"
user bool mcm_zchecker_infovar_mainselfptr	= false; //  \_ Pointer "self".

user bool mcm_zchecker_info_worldpos		= true;  // Tilts, position, velocity.
user bool mcm_zchecker_infovar_wposplayerbuttons = false;
user bool mcm_zchecker_infovar_wposnoroll 	= false;
user bool mcm_zchecker_info_maininteract	= true;	 // Health, mass, etc.

user bool mcm_zchecker_info_geomsectors		= false; // Sectors linked to the actor.
user bool mcm_zchecker_infovar_geomsecdiffers = false;// \_ Show "floorsector"/"ceilingsector" only if they differs from the "cursector".
user bool mcm_zchecker_infovar_geomseclight	= true;	 //  \_ Sector light level.
user int  mcm_zchecker_infovar_geomsecflags	= 0;	 //  \_ Sector flags: "Disabled", "Short names", "Long names".
user int  mcm_zchecker_infovar_geomsecheights = 1;	 //  \_ "Off", "Heights", "Heights & delta to player".
user bool mcm_zchecker_infovar_geomsectex	= false; //  \_ Sector textures.
user bool mcm_zchecker_infovar_geomsecdamage= false; //  \_ Sector damage (also for terrain).
user bool mcm_zchecker_infovar_geomsecother	= false; //  \_ Other sector info (water level, gravity, ...).
user bool mcm_zchecker_infovar_geomsecportal= false; //  \_ Sector portal info.
user bool mcm_zchecker_infovar_geomsecterrain= false;//  \_ Shows floorsector terrain, if any.
// Something about sector normals?

user bool mcm_zchecker_info_geomlines		= false; // Lines linked to the actor.
user int  mcm_zchecker_infovar_geomlinetype	= 1;	 //  \_ "On line of sight", "Blocking line", "Both" (a mask).
user int  mcm_zchecker_infovar_geomlnmain	= 0;	 //  \_ Length and flags: "Disabled", "Short names", "Long names".
user bool mcm_zchecker_infovar_geomlntex	= true;	 //  \_ Line textures.
user int  mcm_zchecker_infovar_geomlnaction	= 1;	 //  \_ Line action info: "Disabled", "Action & TID", "Action, args & TID", "Everything".
user bool mcm_zchecker_infovar_geomlnportal	= false; //  \_ Line portal info.

user bool mcm_zchecker_info_inventory		= true;
user int  mcm_zchecker_infovar_invamount	= 40;
user bool mcm_zchecker_info_states			= true; // States and frames.
user int  mcm_zchecker_infovar_statesamount	= 11;	 //  \_ Amount of states (unlimited, 1, 2, ..., 25).
user bool mcm_zchecker_infovar_statetic 	= true;	 //  \_ Current state tic information;
user int  mcm_zchecker_infovar_stateextras 	= 0;	 //  \_ Current state extra information (flags, PState X/Y, etc.);
user bool mcm_zchecker_infovar_stateslogging= false; //  \_ States logging.
user bool mcm_zchecker_info_visual			= false; // Sprite, alpha, RenderStyle, etc.

user bool mcm_zchecker_info_mainpointers	= true;  // master, target, tracer.
user bool mcm_zchecker_info_levelpointers 	= false; // Linetarget, BlockingMobj.
user bool mcm_zchecker_info_dfrlinkpointers	= false; // LastHeard, LastEnemy, LastLookActor, Poisoner.
user bool mcm_zchecker_info_otherpointers	= false; // alternative, &inv, goal, &snext.

user bool mcm_zchecker_info_args			= false; // TIDs, arguments, special.
user bool mcm_zchecker_info_players			= false; // FriendPlayer, DesignatedTeam, LastLookPlayerNumber, ...

//user bool mcm_zchecker_info_other			= false; // "PainThreshold", "WoundHealth", ...
user bool mcm_zchecker_info_sound			= false;

// The "Everything" map console variables.
server bool mcm_zchecker_ev_forcemap		= false; // Skip the Everything map check (use the code attached to it on any map).

server bool mcm_zchecker_ev_spawnreplaced	= true;
server bool mcm_zchecker_ev_restrictreplacements	= true;
server bool mcm_zchecker_ev_spawnmissingsprites		= false;
server bool mcm_zchecker_ev_spawntnt1a0		= false;
server bool mcm_zchecker_ev_spawnplyc		= false;
server bool mcm_zchecker_ev_spawninvisible	= true;
server bool mcm_zchecker_ev_spawnstealth	= true;
server bool mcm_zchecker_ev_spawnplrchunks	= false;

server bool mcm_zchecker_ev_logspawninfo	= false;  // Log information to console about created (or skipped) actors.
server bool mcm_zchecker_ev_auto_notarget	= true;   // Automatically set a "notarget" cheat when entering an Everything map.
server bool mcm_zchecker_ev_auto_iddqd		= false;  // Automatically set a "god" cheat when entering an Everything map.


// Non-panel CVars:
user int mcm_zchecker_specinfo_netevents	= 0; // "Disabled", "Name and args", "Name, args and maptime", "All information".

